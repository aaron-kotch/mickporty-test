{"version":3,"sources":["components/Common/AlertDialog/AlertDialog.jsx","contexts/AlertContext.jsx","components/Common/ConfirmDialog/ConfirmDialog.jsx","components/App.js","reportWebVitals.js","ErrorBoundary.js","index.js","api/api.js","hooks/useScript.js","contexts/AddressContext.jsx","contexts/CartContext.jsx","contexts/UserContext.jsx","contexts/PromoContext.jsx","utils/map.js","contexts/StoreContext.jsx","contexts/PageContext.jsx","components/Common/Loader/Loader.jsx","components/Common/Loader/OverlayLoader.jsx","hooks/useCurrency.js","constants/config.js","constants/routes.constant.js","assets/svgs/Store4Strip.svg","components/Common/EmptyState/EmptyState.jsx"],"names":["useStyles","makeStyles","root","textAlign","dialogTitle","marginTop","marginBottom","dialogContent","fontSize","dialogButton","display","justifyContent","dialogButtonText","borderRadius","textTransform","height","width","paperClassName","minHeight","minWidth","AlertDialog","props","classes","title","children","open","setOpen","onConfirm","onClose","aria-labelledby","className","PaperProps","variant","onClick","color","AlertContext","React","createContext","popUp","undefined","pushPopUp","popPopUp","alertPopUps","pushAlertPopUp","popAlertPopUp","AlertProvider","useState","setPopUp","setAlertPopUps","Provider","value","popUpMsg","messages","temp","push","pop","popUpMsgTitle","content","length","msgObj","tngGetStorage","key","onSuccess","my","getStorage","success","res","data","fail","err","tngSetStorage","setStorage","useAlertContext","useContext","ConfirmDialog","confirmMessage","denyMessage","Dialog","DialogTitle","id","Typography","component","DialogContent","DialogContentText","DialogActions","Button","Home","lazy","CategoryListing","ProductListing","ProductDetails","Cart","Orders","OrderDetails","OngoingOrderDetails","BannerDetails","StoreLocator","SingleStoreLocator","Search","FavouriteAddresses","TnC","Privacy","EditAddress","NotFound","submitEmail","SignIn","App","isUserLoading","useUserContext","useCartContext","openLastItemConfirm","setOpenlastItemConfirm","removeLastItem","loader","Loader","Suspense","fallback","from","to","routes","home","exact","path","categoryListing","categoryListingBanner","productListing","productListingBanner","productDetails","cart","search","storeLocator","singleStoreLocator","orders","order","ongoingOrder","banner","favouriteAddresses","tnc","privacy","editAddress","proceed","notFound","map","msg","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","state","hasError","error","errorInfo","console","this","setState","componentStack","EmptyState","description","Component","smoothscroll","polyfill","theme","createMuiTheme","typography","platformFontWeightMax","platformFontWeight","platformFontWeightMedium","platformFontWeightLight","fontFamily","palette","primary","main","light","lighter","contrastText","secondary","backdrop","discount","customGrey","dark","medium","overrides","MuiInputBase","MuiCard","boxShadow","grey","MuiButton","contained","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","myHeaders","Headers","append","process","myRequest","Request","window","location","hostname","includes","method","headers","redirect","timeout","delay","Promise","setTimeout","userGetProfile","token","a","graphql","JSON","stringify","query","variables","request","body","fetch","response","ok","Error","json","catch","getFavAddressList","result","addUserFavAddressList","values","address","longitude","latitude","country","city","postal","address2","notes","updateUserFavAddressList","customerFavouriteAddressId","updatedNotes","updatedAddress2","removeUserFavAddressList","getCatalogItemByProductId","orderType","storeId","getProductRecord","getAllCatalogItemsByCategoryOrCatalogId","departmentId","type","storeIdStr","formatCategoryDetails","getProductListing","product","i","catalogId","productTaggingId","items","products","totalCount","getAllCatalogItemsByCatalogId","page","getAllCatalogItemsByProductTaggingId","getLandingProductListing","log","getAllCategories","getAllStoresInfo","searchStoreList","searchStoresInfoOnPickUp","keyword","getNearbyStores","lat","lng","getNearbyStoreList","generateGetOrderQuery","status","addedString","getUserCompletedOrder","getUserOrderList","getUserPendingOrder","submitOrderReview","orderId","review","filePathArr","productAvailabilityRating","comment","overallRating","foodRating","driverServiceRating","waitingTimeRating","staffServiceRating","sendOrderReceipt","getOrderDetailList","getOrderReviewList","getHomePageBanner","getLandingPageBannerList","getHomePageBannerDetail","landingPageBannerId","getLandingPageBanner","getRecommendations","storeIdText","getCartRecommendations","searchItem","params","getTrendingList","placeUserOrderSqs","productList","scheduledDateTime","isAdvancedOrder","deliveryAddress","noteToRider","miscellaneousInfo","floorOrUnit","promoCode","customerAddress","deliveryFee","isCulteryRequested","remarks","obj","Boolean","replace","placeUserOrderSqsPickUp","getPlaceUserOrderMessage","msgId","checkCart","distance","_promocode","tNGCheckMember","authCode","email","generateS3UploadLink","fileName","folderName","scriptSubscriber","useScript","url","scriptObjectName","hasLoaded","setHasLoaded","useEffect","script","createElement","src","async","onload","appendChild","removeChild","AddressContext","addresses","selectedAddress","getAddressById","addrId","addAddress","addr","removeAddress","editingAddrInCart","setEditingAddrInCart","resetSelectedAddress","AddressProvider","config","googleMapKey","scriptHasLoaded","setSelectedAddress","setAddresses","doneGettingAddrAfterLogin","setDoneGettingAddrAfterLogin","didMountRef","useRef","didMountRef2","Array","isArray","selectedAddr","find","current","getAddrObjToSave","uuidv4","closeModalFunction","newAddr","addrs","getFavAddr","addressesRes","exactAddresses","filter","some","backendAddr","forEach","foundAddrIdx","findIndex","addrFromStorage","prevAddresses","addressesCopy","cloneDeep","targetAddr","Object","assign","generateValuesForAddAddr","currentPosition","user","place","geometry","address_components","types","text","long_name","useAddressContext","ShoppingType","Delivery","PickUp","CartContext","shoppingType","deliveryInfo","name","time","paymentMethod","contactNumber","oriDeliveryFee","basketValue","deliveryDiscountAmount","deliverySurchargeAmount","addCartItem","item","updateCartItemQuantity","removeCartItem","removeAll","getAmount","getItemQuantity","setMiscellaneousInfo","misc","setDeliveryInfo","setShoppingType","replaceCart","subtotal","total","CartProvider","usePromoContext","promoCodeInfo","freeItemCart","setFreeItemCart","hasPromoCodeApplied","formatCurrency","useCurrency","setCart","isLoading","setIsLoading","setTotal","setSubtotal","setRemoveLastItem","freeDeliveryMessage","basketValueInfo","setBasketValueInfo","progress","setProgress","prevCart","useCallback","selected","all","callbackIfRemovingAll","noConfirmationPopUp","cartItems","p","selectedIndex","productId","quantity","splice","reduce","sum","discountedPrice","price","tempTotal","totalPromoDiscount","percentage","getItemAmount","ecommerceMaximumQuantity","pickupMaximumQuantity","formatProducts","after","productName","productImage","image","mandatoryItem","setMandatoryOption","isFreeItem","tempCart","getPlaceUserOrderSqsData","timeLength","dateObj","applyPromoCode","timeLabel","selectedStore","_hasPromocodeApplied","label","toLowerCase","Date","getTime","moment","toDate","tempCombinedCart","formattedCart","sku","toISOString","isSomeProductsInvalid","setHasProductInvalid","updatedCart","invalidProducts","hasProductInvalid","copy","productInCart","theTarget","customerCartProductId","checkIfDeliveryFreeAfterCheckCart","isPromoCodeApplying","promoCodeDiscount","net","checkBasketValueInfo","statusCode","UserContext","isLoggedIn","isNeedEmail","login","updateProfile","UserProvider","history","useHistory","setUser","setIsLoggedIn","setIsUserLoading","loggingInRef","callback","setCallback","setIsNeedEmail","canCallCallback","setCanCallCallback","postMessage","action","onMessage","e","SignedToken","tempUser","firstUserLogin","PrimaryEmail","fulfilledValue","PromoContext","promoTitle","setPromoCode","setIsPromoCodeApplying","setPromoCodeInfo","removePromoCode","checkPromoStatus","PromoProvider","setHasPromoCodeApplied","event","errorMessage","isFreeProductDiscountType","returnedProducts","parseFloat","tempReturnedProducts","isDisabled","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","Math","sin","cos","atan2","sqrt","deg","PI","getPositionOptions","enableHighAccuracy","maximumAge","getUserCurrentLocationByHTML","onRetrievedPosition","onFailedGettingUserLocation","onNotAgreedSharing","navigator","geolocation","getCurrentPosition","position","pos","coords","getUserCurrentLocation","getLocation","StoreContext","stores","nearbyStores","userEnabledLocation","userLocation","setSelectedStore","setNearbyStores","setUserEnabledLocation","setUserLocation","resetSelectedStore","StoreProvider","setSelectedStoreState","setStores","isSelectStoreModalOpened","setIsSelectStoreModalOpened","firstRender","setFirstRender","allStores","getStoreBasedOnDistance","locationPassed","s","toFixed","useStoreContext","PageContext","pendingOrders","historyOrders","scrollPosition","selectedTab","setSelectedTab","Pages","PageProvider","getAllOrders","setGetAllOrders","landingProducts","setLandingProducts","categoryMenu","setCategoryMenu","keyHighlights","setKeyHighlights","setOrders","reviewedOrders","setReviewedOrders","setQuery","initialScrollPositionsObj","keys","scrollPositions","setScrollPositions","saveOrders","saveScrollPosition","getScrollPosition","usePageContext","CircularProgress","size","zIndex","drawer","OverlayLoader","Backdrop","profile","signup","helpCenter","forgetPassword","pickUpSVG","alt","gutterBottom"],"mappings":"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","file":"static/js/main.6faf4139.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textAlign: \"center\",\n    // fontFamily: \"DIN Regular Alternate\",\n  },\n  dialogTitle: {\n    marginTop: \"0.5rem\",\n    marginBottom: \"-0.7rem\",\n  },\n  dialogContent: {\n    fontSize: \"14px\"\n  },\n  dialogButton: {\n    display: \"flex\", \n    justifyContent: \"center\",\n    marginBottom: \"0.5rem\",\n  },\n  dialogButtonText: {\n    borderRadius: \"25px\", \n    textTransform: \"capitalize\", \n    height: \"40px\", \n    width: \"125px\"\n  },\n  paperClassName:{\n    borderRadius: \"20px\", \n    minHeight: \"150px\",\n    minWidth: \"200px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst AlertDialog = (props) => {\n  const classes = useStyles();\n\n  // onConfirm needed for Pop Up in ongoingOrderDetails page\n  const { title, children, open, setOpen, onConfirm = ()=>{} } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      className={classes.root}\n      PaperProps={{\n        className: classes.paperClassName,\n      }}\n    >\n      <DialogTitle>\n        <Typography>\n          {title}\n        </Typography>\n      </DialogTitle>\n      {\n        children &&\n        <DialogContent>{children}</DialogContent>\n      }\n      <DialogActions className={classes.dialogButton}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          color=\"primary\"\n          className={classes.dialogButtonText}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default AlertDialog;","import React from \"react\";\n\nconst AlertContext = React.createContext({\n  popUp: undefined,\n  pushPopUp: () => { },\n  popPopUp: () => { },\n  alertPopUps: undefined,\n  pushAlertPopUp: () => { },\n  popAlertPopUp: () => { },\n});\n\nconst AlertProvider = ({ children }) => {\n  const [popUp, setPopUp] = React.useState([]); // control ConfirmDialog in App.js\n  const [alertPopUps, setAlertPopUps] = React.useState([]); // control AlertDialog in App.js\n\n  const pushPopUp = (popUpMsg) => {\n    setPopUp((messages) => {\n      const temp = [...messages];\n      temp.push(popUpMsg);\n      return temp;\n    });\n  }\n  const popPopUp = () => {\n    setPopUp((messages) => {\n      const temp = [...messages];\n      temp.pop();\n      return temp;\n    });\n  }\n  const pushAlertPopUp = (popUpMsgTitle, content) => {\n    setAlertPopUps((messages) => {\n      if (messages.length > 0 && popUpMsgTitle === messages[messages.length - 1].title) return messages;\n      const temp = [...messages];\n      const msgObj = { title: popUpMsgTitle, content: content }\n      temp.push(msgObj);\n      return temp;\n    });\n  }\n  const popAlertPopUp = () => {\n    setAlertPopUps((messages) => {\n      const temp = [...messages];\n      temp.pop();\n      return temp;\n    });\n  }\n  const tngGetStorage = (key, onSuccess) => {\n    try {\n      // eslint-disable-next-line no-undef\n      my.getStorage({\n        key: key,\n        success: function (res) {\n          // eslint-disable-next-line no-undef\n          // my.alert({ title: \"get key: \" + key, content: res });\n          if (!!res.data)\n            onSuccess(res.data);\n        },\n        fail: function (res) {\n          // eslint-disable-next-line no-undef\n          // my.alert({ content: res.errorMessage });\n        }\n      });\n    } catch (err) {\n\n      // eslint-disable-next-line no-undef\n      // my.alert({\n      //   title: \"err\",\n      //   content: `${err}`\n      // })\n    }\n  }\n  const tngSetStorage = (key, data) => {\n    try {\n      // eslint-disable-next-line no-undef\n      my.setStorage({\n        key: key,\n        data: data,\n        success: function () {\n          // eslint-disable-next-line no-undef\n          // my.alert({ title: \"set key successfully: \" + key });\n        }\n      });\n    } catch (err) {\n      ;\n      // eslint-disable-next-line no-undef\n      // my.alert({\n      // title: \"err\",\n      // content: `${err}`\n      // })\n    }\n  }\n\n  return (<><AlertContext.Provider value={{ popUp, pushPopUp, popPopUp, alertPopUps, pushAlertPopUp, popAlertPopUp, tngGetStorage, tngSetStorage }}>\n    {children}\n  </AlertContext.Provider></>)\n};\n\nconst useAlertContext = () => {\n  return React.useContext(AlertContext);\n};\n\nexport { AlertProvider, useAlertContext };\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textAlign: \"center\",\n    // fontFamily: \"DIN Regular Alternate\",\n  },\n  dialogTitle: {\n    marginTop: \"0.5rem\",\n    marginBottom: \"-0.7rem\",\n  },\n  dialogContent: {\n    fontSize: \"14px\"\n  },\n  dialogButton: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: \"0.5rem\",\n  },\n  dialogButtonText: {\n    borderRadius: \"25px\",\n    textTransform: \"capitalize\",\n    height: \"30px\",\n    width: \"105px\"\n  },\n  paperClassName: {\n    borderRadius: \"20px\",\n  }\n}));\n\nconst ConfirmDialog = (props) => {\n  const classes = useStyles();\n  const { title, children, open, setOpen, onConfirm, confirmMessage = \"Yes\", denyMessage = \"No\" } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      className={classes.root}\n      PaperProps={{\n        className: classes.paperClassName,\n      }}\n    >\n      <DialogTitle id=\"confirm-dialog\" className={classes.dialogTitle}>\n        <Typography variant=\"h6\" component=\"div\">\n          {title}\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <   DialogContentText id=\"alert-dialog-description\" className={classes.dialogContent}>\n          {children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions className={classes.dialogButton}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setOpen(false)}\n          color=\"primary\"\n          className={classes.dialogButtonText}\n        >\n          {denyMessage}\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          color=\"primary\"\n          className={classes.dialogButtonText}\n        >\n          {confirmMessage}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nexport default ConfirmDialog;","import React from 'react';\nimport { Loader } from \"@Common/Loader\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { routes } from \"../constants/routes.constant\";\nimport { useUserContext } from '@Context/UserContext';\nimport ConfirmDialog from '@Common/ConfirmDialog/ConfirmDialog';\nimport AlertDialog from '@Common/AlertDialog/AlertDialog';\nimport { useCartContext } from '@Context/CartContext';\nimport { useAlertContext } from '@Context/AlertContext';\n\nconst Home = React.lazy(() => import('@Pages/Home'));\nconst CategoryListing = React.lazy(() => import('@Pages/CategoryListing'));\nconst ProductListing = React.lazy(() => import('@Pages/ProductListing'));\nconst ProductDetails = React.lazy(() => import('@Pages/ProductDetails'));\nconst Cart = React.lazy(() => import('@Pages/Cart'));\nconst Orders = React.lazy(() => import('@Pages/Orders'));\nconst OrderDetails = React.lazy(() => import('@Pages/OrderDetails'));\nconst OngoingOrderDetails = React.lazy(() => import('@Pages/OngoingOrderDetails'));\nconst BannerDetails = React.lazy(() => import('@Pages/BannerDetails'));\nconst StoreLocator = React.lazy(() => import('@Pages/StoreLocator'));\nconst SingleStoreLocator = React.lazy(() => import('@Pages/SingleStoreLocator'));\nconst Search = React.lazy(() => import('@Pages/Search'));\nconst FavouriteAddresses = React.lazy(() => import('@Pages/FavouriteAddresses'));\nconst TnC = React.lazy(() => import('@Pages/TnC'));\nconst Privacy = React.lazy(() => import('@Pages/Privacy'));\nconst EditAddress = React.lazy(() => import('@Pages/EditAddress'));\nconst NotFound = React.lazy(() => import('./Common/NotFound'));\n// const NoAccess = React.lazy(() => import('./Common/NoAccess'));\nconst submitEmail = React.lazy(()=> import('@Pages/SubmitEmail/SubmitEmail'));\nconst SignIn = React.lazy(()=> import('@Pages/SignIn'));\n\nfunction App() {\n\n  const { isUserLoading } = useUserContext();\n  const { popUp, popPopUp, alertPopUps, popAlertPopUp } = useAlertContext();\n  const { openLastItemConfirm, setOpenlastItemConfirm, removeLastItem } = useCartContext();\n  const loader = <Loader />;\n\n  return (\n    <>\n      <React.Suspense fallback={loader}>\n        <Switch>\n          <Redirect from=\"/\" to={routes.home} exact />\n          <Route exact path={routes.home} component={Home} />\n          <Route exact path={routes.categoryListing} component={CategoryListing} />\n          <Route exact path={routes.categoryListingBanner} component={CategoryListing} />\n          <Route exact path={routes.productListing} component={ProductListing} />\n          <Route exact path={routes.productListingBanner} component={ProductListing} />\n          <Route exact path={routes.productDetails} component={ProductDetails} />\n          <Route exact path={routes.cart} component={Cart} />\n          <Route exact path={routes.search} component={Search} />\n          <Route exact path={routes.storeLocator} component={StoreLocator} />\n          <Route exact path={routes.singleStoreLocator} component={SingleStoreLocator} />\n          <Route exact path={routes.orders} component={Orders} />\n          <Route exact path={routes.order} component={OrderDetails} />\n          <Route exact path={routes.ongoingOrder} component={OngoingOrderDetails} />\n          <Route exact path={routes.banner} component={BannerDetails} />\n          <Route exact path={routes.favouriteAddresses} component={FavouriteAddresses} />\n          <Route exact path={routes.tnc} component={TnC} />\n          <Route exact path={routes.privacy} component={Privacy} />\n          <Route exact path={routes.editAddress} component={EditAddress} />\n          <Route exact path={routes.submitEmail} component={submitEmail} />\n          <Route exact path={routes.proceed} component={SignIn} />\n          <Route exact path={routes.notFound} component={NotFound} />\n          <Redirect from=\"*\" to={routes.notFound} />\n        </Switch>\n      </React.Suspense>\n      {\n        isUserLoading && loader\n      }\n      {\n        popUp && popUp.map((msg) => <ConfirmDialog \n          key={msg}\n          open={true} \n          title={msg} \n          onConfirm={()=> {}}\n          setOpen={()=> popPopUp()}/>\n          )\n      }\n      {\n        alertPopUps && alertPopUps.map((msg, index) => <AlertDialog \n          key={msg.title + index}\n          open={true} \n          title={msg.title} \n          children={msg.content}\n          setOpen={()=> popAlertPopUp()}/>\n        )\n      }\n      <ConfirmDialog \n        open={openLastItemConfirm} \n        title={\"Remove item\"}\n        children={\"Are you sure you want to remove this item?\"} \n        onConfirm={removeLastItem}\n        confirmMessage={\"Ok\"}\n        denyMessage={\"Cancel\"}\n        setOpen={setOpenlastItemConfirm}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { EmptyState } from \"@Common/EmptyState/EmptyState\";\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: '', errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n    this.setState({error: error, errorInfo: errorInfo.componentStack})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      console.error('something went wrong');\n      return (\n        <>\n        <EmptyState title=\"Something went wrong. Please restart the mini program.\" description={this.state.error} />\n        </>\n      )\n     \n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { UserProvider } from \"@Context/UserContext\";\nimport { CartProvider } from \"@Context/CartContext\";\nimport { AddressProvider } from \"@Context/AddressContext\";\nimport smoothscroll from \"smoothscroll-polyfill\";\nimport { StoreProvider } from \"@Context/StoreContext\";\nimport { PromoProvider } from \"@Context/PromoContext\";\nimport { PageProvider } from \"@Context/PageContext\";\nimport { grey } from \"@material-ui/core/colors\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { AlertProvider } from \"@Context/AlertContext\";\n// import { getMobileOperatingSystem } from '@Util/function';\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nconst theme = createMuiTheme({\n  typography: {\n    color: \"#59595C\",\n    // platformFontWeight: getMobileOperatingSystem() === 'iOS' ? '900' : '700',\n    // platformFontWeightMedium: getMobileOperatingSystem() === 'iOS' ? '700' : '500',\n    // platformFontWeightLight: getMobileOperatingSystem() === 'iOS' ? '500' : '300',\n    platformFontWeightMax: '900',\n    platformFontWeight: '700',\n    platformFontWeightMedium: '500',\n    platformFontWeightLight: '300',\n    fontFamily: 'din_regular, din_bold, din_light, din_medium, din_pro_bold, \"DINBold-Bold\"',\n  },\n  palette: {\n    primary: {\n      main: \"#1E91CF\",\n      light: \"#cfe4e9\",\n      lighter: \"#F4F9FC\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n    success: {\n      main: \"#00a041\",\n    },\n    backdrop: {\n      main: \"#00000000\",\n    },\n    discount: {\n      main: \"#F96232\",\n    },\n    customGrey: {\n      dark: \"#59595C\",\n      medium: \"#6D6E71\",\n      light: \"#A6A8AC\",\n      lighter: \"#F2F2F7\",\n    },\n  },\n  overrides: {\n    MuiInputBase: {\n      root: {\n        height: \"100%\",\n      },\n    },\n    MuiCard: {\n      root: {\n        boxShadow: `0 0 5px ${grey[300]}`,\n      },\n    },\n    MuiButton: {\n      contained: {\n        boxShadow: \"none\",\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <AlertProvider>\n            <AddressProvider>\n              <PromoProvider>\n                <CartProvider>\n                  <StoreProvider>\n                    <UserProvider>\n                      <PageProvider>\n                        <App />\n                      </PageProvider>\n                    </UserProvider>\n                  </StoreProvider>\n                </CartProvider>\n              </PromoProvider>\n            </AddressProvider>\n          </AlertProvider>\n        </ThemeProvider>\n      </Router>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// Standardise the way to make API calls\n// reuse request object\nvar myHeaders = new Headers();\nmyHeaders.append(\"x-api-key\", process.env.REACT_APP_API_KEY + process.env.REACT_APP_API_2_KEY);\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append('X-Frame-Options', 'SAMEORIGIN');\nmyHeaders.append('Content-Security-Policy', 'default-src self');\n\nconst myRequest = new Request(\n  window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname.includes(\"vfs.cloud9.ap-southeast-1.amazonaws.com\")\n    ? 'https://4pkgwg6cefdwtgbdhunlcpsvja.appsync-api.ap-southeast-1.amazonaws.com/graphql'\n    : process.env.REACT_APP_APPSYNC,\n  {\n    method: \"POST\",\n    headers: myHeaders,\n    // body: graphql, // to be replaced\n    redirect: \"follow\",\n  }\n);\nfunction timeout(delay) {\n  return new Promise(res => setTimeout(res, delay));\n}\n\n// User Detail\nconst userGetProfile = async (token) => {\n  var graphql = JSON.stringify({\n    query:\n      `query MyQuery {\\n  userGetProfile(token: \"${token}\") {\\n    AccountNo\\n  Race\\n    LastName\\n    FirstName\\n    PrimaryEmail\\n    MobileNumber\\n    Nationality\\n    DateOfBirth\\n    Country\\n    Gender\\n  }\\n}\\n\\n\\n`,\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.userGetProfile)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getFavAddressList = (token) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getFavAddressList(token: \"${token}\") {\\n    address\\n    address2\\n      city\\n    country\\n    isPrimary\\n    longitude\\n    latitude\\n    title\\n    notes\\n     customerFavouriteAddressId\\n    postal\\n      state\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      return result.data.getFavAddressList;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst addUserFavAddressList = (values) => {\n  const { address, title, longitude, latitude, country, city, state, postal, token, address2 = \"\", notes = \"\" } = values;\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  addUserFavAddressList(address: \"${address}\", address2: \"${address2}\", title: \"${title}\", longitude: \"${longitude}\", latitude: \"${latitude}\", country: \"${country}\", city: \"${city}\", state: \"${state}\", postal: \"${postal}\", token: \"${token}\", notes: \"${notes}\") {\\n    message\\n    status\\n    statusCode\\n    customerFavouriteAddressId\\n  }\\n}`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"addUserFavAddressList result\", result.data.addUserFavAddressList);\n      return result.data.addUserFavAddressList;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst updateUserFavAddressList = (values, customerFavouriteAddressId) => {\n  const { address, address2 = \"\", title, longitude, latitude, country, city, state, postal, token, notes = \"\" } = values;\n  let updatedNotes = notes === null ? \"\" : notes;\n  let updatedAddress2 = address2 === null ? \"\" : address2;\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  updateUserFavAddressList(address: \"${address}\", address2: \"${updatedAddress2}\", city: \"${city}\", country: \"${country}\", customerFavouriteAddressId: \"${customerFavouriteAddressId}\", latitude: \"${latitude}\", longitude: \"${longitude}\", notes: \"${updatedNotes}\", postal: \"${postal}\", state: \"${state}\", title: \"${title}\", token: \"${token}\") {\\n    customerFavouriteAddressId\\n    message\\n    status\\n    statusCode\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    }).then((result) => {\n      return result.data.updateUserFavAddressList;\n    }).catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst removeUserFavAddressList = (token, customerFavouriteAddressId) => {\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  removeUserFavAddressList(token: \"${token}\", customerFavouriteAddressId: \"${customerFavouriteAddressId}\") {\\n    message\\n\n      status\\n      statusCode\\n     customerFavouriteAddressId\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"removeUserFavAddressList result\", result.data.removeUserFavAddressList);\n      return result.data.removeUserFavAddressList;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n// used in ProductDetails.jsx only\nconst getCatalogItemByProductId = async (id, orderType, storeId) => {\n  var graphql = !storeId ? JSON.stringify({\n    query: `query MyQuery {\\n  getProductRecord(orderType:\"${orderType}\", productId: \"${id}\") {\\n    description\\n    discount\\n    discountedPrice\\n    ecommerceMaximumQuantity\\n     pickupMaximumQuantity\\n    image\\n    isDisabled\\n    price\\n     discountedPrice\\n    productId\\n      promotionDescription\\n    sku\\n   title\\n  }\\n}\\n`,\n    variables: {},\n  }) : JSON.stringify({\n    query: `query MyQuery {\\n  getProductRecord(orderType:\"${orderType}\", productId: \"${id}\", storeId: \"${storeId}\") {\\n    description\\n    discount\\n    discountedPrice\\n    ecommerceMaximumQuantity\\n     pickupMaximumQuantity\\n    image\\n    isDisabled\\n    price\\n     discountedPrice\\n    productId\\n      promotionDescription\\n    sku\\n   title\\n  }\\n}\\n`,\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.getProductRecord)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Example returned data: All catalogs like Bun under Bread catagory if category ID passed\n// else, it return data about one catalog\n// shud hv minimal amount of data, only general data needed\nconst getAllCatalogItemsByCategoryOrCatalogId = (departmentId, type, orderType, storeId = null) => {\n  let graphql;\n  let storeIdStr = \"\";\n  if (storeId !== null) {\n    storeIdStr = `, storeId: \"${storeId}\"`\n  }\n  graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getProductListing(${type}: \"${departmentId}\", orderType: \"${orderType}\", pageSize: 10 ${storeIdStr}) {\\n    products {\\n      departments\\n      description\\n      discountPercentage\\n      discount\\n      discountedPrice\\n      image\\n      isDisabled\\n      price\\n      productId\\n     promotionDescription\\n      title\\n      sku\\n}\\n    departmentId\\n    productTaggingId\\n    title\\n    totalCount\\n}   \\n}\\n`,\n    variables: {},\n  });\n\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      return formatCategoryDetails(result.data.getProductListing)\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Product\n// to display product for 1 catalog in secondary menu\nconst formatCategoryDetails = function (data) {\n  // only 1 catalog called\n  // console.log(data);\n  return data.map((product, i) => {\n    const category = {\n      catalogId: product.departmentId ?? product.productTaggingId,\n      departmentId: product.departmentId,\n      productTaggingId: product.productTaggingId,\n      title: product.title,\n      items: product.products,\n      totalCount: product.totalCount,\n    };\n    // console.log(category)\n    return category;\n  });\n};\n\n// Example returned data: One catalog data like Bun ONLY under Bread catagory\n// more info are requested from this API\n// and dont need to wait for this call so async removed\nconst getAllCatalogItemsByCatalogId = (departmentId, page = 0, orderType, storeId = null) => {\n  let graphql;\n  let storeIdStr = \"\";\n  if (storeId !== null) {\n    storeIdStr = `, storeId: \"${storeId}\"`\n  }\n  graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getProductListing(departmentId: \"${departmentId}\" ${storeIdStr}, page: ${page}, pageSize: 10, orderType: \"${orderType}\") {\\n    products {\\n            description\\n      discount\\n      discountedPrice\\n      ecommerceMaximumQuantity\\n      pickupMaximumQuantity\\n     image\\n      isDisabled\\n      price\\n      productId\\n      promotionDescription\\n       title\\n      sku\\n}\\n    departmentId\\n    productTaggingId\\n     title\\n     totalCount\\n}   \\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(departmentId, page);\n      // console.log(result);\n      const productsInCorrectForm = formatCategoryDetails(\n        result.data.getProductListing\n      );\n      return productsInCorrectForm;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n// for tagged products such as featured products at home page\nconst getAllCatalogItemsByProductTaggingId = (departmentId, page = 0, orderType, storeId = null) => {\n  let graphql;\n  let storeIdStr = \"\";\n  if (storeId !== null) {\n    storeIdStr = `, storeId: \"${storeId}\"`\n  }\n  graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getProductListing(productTaggingId: \"${departmentId}\" ${storeIdStr}, page: ${page},  pageSize: 10, orderType: \"${orderType}\") {\\n    products {\\n      departments\\n      description\\n      discountPercentage\\n      discount\\n      discountedPrice\\n      image\\n      isDisabled\\n      price\\n      productId\\n     promotionDescription\\n      title\\n      sku\\n}\\n    departmentId\\n    productTaggingId\\n    title\\n    totalCount\\n}   \\n}\\n`,\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      const productsInCorrectForm = formatCategoryDetails(\n        result.data.getProductListing\n      );\n      return productsInCorrectForm;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getLandingProductListing = (orderType, storeId) => {\n  // console.log('orderType, storeId',orderType, storeId)\n  if (!storeId) storeId = '';\n  var graphql = JSON.stringify({\n    query:\n      `query MyQuery {\\n  getLandingProductListing (orderType: \"${orderType}\", storeId: \"${storeId}\") {\\n    departmentId\\n    lastEvaluatedKey\\n    productTaggingId\\n    title\\n    products {\\n      departments\\n      image\\n      description\\n      dimension\\n      isDisabled\\n     isAvailable\\n      itemCategoryCode\\n     ecommerceMaximumQuantity\\n    pickupMaximumQuantity\\n      name\\n      price\\n     discountedPrice\\n      productId\\n     promotionDescription\\n      taggings\\n      title\\n    }\\n  }\\n}`,\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      const productsInCorrectForm = formatCategoryDetails(\n        result.data.getLandingProductListing\n      );\n      return productsInCorrectForm;\n    })\n    .catch((error) => {\n      console.log(\"error\", error);\n      return error;\n    });\n};\nconst getAllCategories = async () => {\n  var graphql = JSON.stringify({\n    query:\n      \"query MyQuery {\\n  getLandingMenuList {\\n    actionId\\n    actionType\\n    image\\n    title\\n  }\\n}\\n\",\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Stores\nconst getAllStoresInfo = async () => {\n  var graphql = JSON.stringify({\n    query:\n      'query MyQuery {\\n  searchStoreList(keyword: \"ALL STORES\") {\\n    address\\n    eCommerceLastOrder\\n    minDeliveryDuration\\n     minFoodPreparationDuration\\n   latitude\\n    longitude\\n    operatingHours\\n    storeName\\n    storeStatus\\n    hasSeatingArea\\n    isOnline24Hour\\n    storeId\\n    state\\n    distance\\n    deliveryServiceAvailable\\n    storeOperatingHours\\n    ecomOperatingHours\\n  }\\n}\\n\\n',\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.searchStoreList)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst searchStoresInfoOnPickUp = async (keyword) => {\n  var graphql = JSON.stringify({\n    query:\n      `query MyQuery {\\n  searchStoreList(keyword: \"${keyword}\", orderType: \"PickUp\") {\\n    address\\n    eCommerceLastOrder\\n    minDeliveryDuration\\n     minFoodPreparationDuration\\n    latitude\\n    longitude\\n    operatingHours\\n    storeName\\n    storeStatus\\n    hasSeatingArea\\n    isOnline24Hour\\n    storeId\\n    state\\n    distance\\n    deliveryServiceAvailable\\n    storeOperatingHours\\n    ecomOperatingHours\\n  }\\n}\\n\\n`,\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.searchStoreList)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getNearbyStores = async (orderType, lat, lng) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getNearbyStoreList(latitude: \"${lat}\", longitude: \"${lng}\", orderType: \"${orderType}\") {\\n    address\\n    city\\n    deliveryFee\\n    deliveryServiceAvailable\\n    distance\\n    eCommerceLastOrder\\n    minDeliveryDuration\\n     minFoodPreparationDuration\\n    storeStatus\\n    storeStatusMsg\\n    storeOperatingHours\\n    storeName\\n    storeId\\n    storeCode\\n    state\\n    postalCode\\n    pickupServiceAvailable\\n    operatingHours\\n    minPurchaseAmount\\n    maxOrderQty\\n    longitude\\n    latitude\\n    isOnline24Hour\\n    isOffline24Hour\\n    isDisabled\\n    hasSeatingArea\\n    freeDeliveryWithMinPurchase\\n    ecomOperatingHours\\n    acceptOrderWithMinPurchase\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.getNearbyStoreList)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Order\n// generic function for below 2 APIs\nconst generateGetOrderQuery = (token, status) => {\n  const addedString = status === \"Completed\" ? \"overallRating\" : \"\";\n  return `query MyQuery {\\n  getUserOrderList(token: \"${token}\", status: \"${status}\") {\\n    message\\n    nextToken\\n    order {\\n      ${addedString}\\n      orderStatusMessage\\n      reasonCode\\n      partialFulfilmentAmount\\n\n    totalOutOfStock\\n      totalOrderItems\\n\n    pointEarned\\n   refundAmount\\n   cancelReason\\n      isRefunded\\n    isReviewAvailable\\n      deliveryFee\\n      orderDate\\n      orderId\\n      scheduledDateTime\\n      deliveryAddress\\n     deliveryAddressLatitude\\n\n    deliveryAddressLongitude\\n      deliveryStatus\\n      driverName\\n     driverPhone\\n     orderNumber\\n      grandTotal\\n      status\\n      storeName\\n      orderCompleteDateTime\\n     remarks\\n     requiredCutlery\\n       orderType\\n      orderDetailProduct {\\n        image\\n        price\\n        quantity\\n        title\\n        productId\\n     ecommerceMaximumQuantity\\n      pickupMaximumQuantity\\n      discountedPrice\\n      mandatoryItem\\n      sku\\n     outOfStock\\n      }\\n    }\\n  }\\n}\\n`;\n};\nconst getUserCompletedOrder = async (token) => {\n  var graphql = JSON.stringify({\n    query: generateGetOrderQuery(token, \"Completed\"),\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      // console.log(\"getUserCompletedOrder\", response);\n      return response.json();\n    })\n    .then((res) => {\n      // console.log('res.data.getUserOrderList', res.data.getUserOrderList);\n      return res.data.getUserOrderList.order;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getUserPendingOrder = async (token) => {\n  var graphql = JSON.stringify({\n    query: generateGetOrderQuery(token, \"Pending\"),\n    variables: {},\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => res.data.getUserOrderList.order)\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst submitOrderReview = async (orderId, review, token, filePathArr) => {\n  let { productAvailabilityRating, comment = \"\", overallRating, foodRating, driverServiceRating, waitingTimeRating, staffServiceRating } = review;\n  if (driverServiceRating) staffServiceRating = driverServiceRating;\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  submitOrderReview(comment: \"${comment}\", foodRating: ${foodRating}, orderId: \"${orderId}\", overallRating: ${overallRating}, productAvailabilityRating: ${productAvailabilityRating}, staffServiceRating: ${staffServiceRating}, waitingTimeRating: ${waitingTimeRating}, token: \"${token}\", attactment: ${JSON.stringify(filePathArr)}) {\\n    message\\n    statusCode\\n  }\\n}\\n`,\n    variables: {}\n  })\n  // return Promise.resolve(graphql);\n  const request = new Request(myRequest, { body: graphql });\n\n  return (\n    fetch(request)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"Network response was not ok\");\n        return response.json();\n      })\n      .then(res => res.data.submitOrderReview)\n      .catch((error) => {\n        // console.log(\"error\", error);\n        return error;\n      })\n  );\n};\n\nconst sendOrderReceipt = (token, orderId) => {\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  sendOrderReceipt(orderId: \"${orderId}\", token: \"${token}\") {\\n    message\\n    statusCode\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"sendOrderReceipt result\", result.data.sendOrderReceipt);\n      return result.data.sendOrderReceipt;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getOrderDetailList = async (token, orderId) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getOrderDetailList(orderId: \"${orderId}\", token: \"${token}\") {\\n    order {\\n      orderId\\n   deliverySurchargeAmount\\n   partialFulfilmentAmount\\n     requiredCutlery\\n     driverName\\n      driverPhone\\n      cancelReason\\n      collectedDateTime\\n      deliveryAddress\\n      deliveryFee\\n      grandTotal\\n      isRefunded\\n      noteToRider\\n      orderCompleteDateTime\\n      orderDate\\n      orderNumber\\n      orderType\\n      overallRating\\n      scheduledDateTime\\n      storeName\\n      totalOrderItems\\n      remarks\\n      status\\n      promoCode\\n      promoCodeReturned\\n      promoCodeTitle\\n      promoDiscount\\n      refundAmount\\n     orderStatusMessage\\n    }\\n    orderDetails {\\n      isFreeItem\\n      mandatoryItem\\n      outOfStock\\n      orderDetailProductId\\n      productDescription\\n      productImage\\n      productName\\n      promoDiscount\\n      quantity\\n      subtotal\\n      voucherDiscount\\n      discount\\n      itemStatus\\n    }\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => {\n      // console.log('getOrderDetailList',res.data.getOrderDetailList.order);\n      return res.data.getOrderDetailList\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getOrderReviewList = async (token, orderId) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n    getOrderReviewList(orderId: \"${orderId}\", token: \"${token}\") {\\n    driverServiceRating\\n    foodRating\\n    overallRating\\n    productAvailabilityRating\\n    staffServiceRating\\n    waitingTimeRating\\n    attachment\\n    comment\\n  }\\n}`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => {\n      // console.log('getOrderDetailList',res.data.getOrderReviewList);\n      return res.data.getOrderReviewList\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n\n// Banner\nconst getHomePageBanner = async () => {\n  var graphql = JSON.stringify({\n    query: \"query MyQuery {\\n  getLandingPageBannerList (platform: \\\"TnG\\\"){\\n    image\\n    landingPageBannerId\\n    sequenceOrder\\n      promoType\\n  }\\n}\\n\",\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((res) => {\n      return res.data.getLandingPageBannerList;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getHomePageBannerDetail = (landingPageBannerId) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getLandingPageBanner(landingPageBannerId: \"${landingPageBannerId}\") {\\n   landingPageBannerId\\n  buttonLabel\\n   image\\n    title\\n    description\\n    platform\\n   promoEntityId\\n    promoType\\n    promoTitle\\n  effectiveStart\\n  effectiveEnd\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"getLandingPageBanner result\", result.data.getLandingPageBanner);\n      return result.data.getLandingPageBanner;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Recommendation\nconst getRecommendations = (orderType, storeId) => {\n  // console.log(orderType, storeId);\n  const storeIdText = storeId === \"\" ? \"\" : `, storeId: \"${storeId}\"`;  // getRecommendations will return null if storeId is empty string, \n  // if storeId field removed getRecommendations will return something instead\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getRecommendations(orderType: \"${orderType}\" ${storeIdText}) {\\n    departments\\n    description\\n    discount\\n    discountEndDate\\n    discountedPrice\\n    discountPercentage\\n    ecommerceMaximumQuantity\\n    pickupMaximumQuantity\\n    image\\n    isDisabled\\n    price\\n    productId\\n    title\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"getRecommendations result\", result.data.getRecommendations);\n      return result.data.getRecommendations;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getCartRecommendations = (orderType, storeId) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getCartRecommendations(orderType: \"${orderType}\", storeId: \"${storeId}\") {\\n    departments\\n    description\\n    discount\\n   discountStartDate\\n    discountEndDate\\n    discountedPrice\\n    discountPercentage\\n    ecommerceMaximumQuantity\\n     pickupMaximumQuantity\\n    image\\n    isDisabled\\n    price\\n    productId\\n    title\\n   sku\\n   name\\n    price\\n   promotionDescription\\n   category\\n   categories\\n    taggings\\n    minFoodPreparationDuration\\n    minDeliveryDuration\\n    isAvailable\\n   isDisabled\\n    description\\n   uom\\n   dimension\\n   temperature\\n   itemCategoryCode\\n    promoCode\\n   priceGroupId\\n    productUOMId\\n    productUOMPriceGroupId\\n  }\\n}\\n`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"getRecommendations result\", result.data.getRecommendations);\n      return result.data.getCartRecommendations;\n    })\n    .catch((error) => {\n      // console.log(\" Cart Recomendation error\", error);\n      return error;\n    });\n};\n\n// Search\nconst searchItem = (keyword, orderType, storeId) => {\n  let params = `keyword: \"${keyword}\", orderType: \"${orderType}\"`;\n  if (storeId) params = `keyword: \"${keyword}\", orderType: \"${orderType}\", storeId: \"${storeId}\"`;\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  searchItem(${params}) {\\n    item {\\n      departments\\n      description\\n      discount\\n      discountPercentage\\n      discountedPrice\\n      image\\n      isDisabled\\n      price\\n      productId\\n      title\\n     ecommerceMaximumQuantity\\n      pickupMaximumQuantity\\n      sku\\n    }\\n  }\\n}\\n`,\n    variables: {}\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"searchItem result\", result.data.searchItem);\n      return result.data.searchItem;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\nconst getTrendingList = () => {\n  var graphql = JSON.stringify({\n    query: \"query MyQuery {\\n  getTrendingList {\\n    title\\n    trendingTextId\\n    sequenceOrder\\n  }\\n}\\n\",\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"getTrendingList result\", result);\n      return result.data.getTrendingList;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Place order and payment\nconst placeUserOrderSqs = async (values) => {\n  const { productList, scheduledDateTime, isAdvancedOrder, deliveryAddress, token, storeId, noteToRider, miscellaneousInfo, floorOrUnit, promoCode } = values;\n  const { address, address2, latitude, longitude } = deliveryAddress;\n  let customerAddress = address\n  if (address2 !== null && address2 !== \"\"){\n    customerAddress = address2 + \", \" + address\n  }\n  const lat = latitude;\n  const lng = longitude;\n  const { deliveryFee, isCulteryRequested, remarks } = miscellaneousInfo;\n  const obj = {\n    query: \"mutation MyMutation {\\n  placeUserOrderSqs(deliveryAddress: \\\"\" + customerAddress\n      + \"\\\", token: \\\"\" + token\n      + \"\\\", storeId: \\\"\" + storeId\n      + \"\\\", remarks: \\\"\" + remarks\n      + \"\\\", paymentMethod: \\\"TNGMP\\\", orderType: \\\"Delivery\\\", noteToRider: \\\"\" + noteToRider\n      + \"\\\", floorOrUnit: \\\"\" + floorOrUnit\n      + \"\\\",  deliveryLatitude: \\\"\" + lat\n      + \"\\\", deliveryLongitude: \\\"\" + lng\n      + \"\\\", deliveryFee: \" + deliveryFee\n      + \", floorOrUnit: \\\"\\\", requiredCutlery: \" + isCulteryRequested\n      + \", promoCode: \\\"\" + promoCode\n      + \"\\\", scheduledDateTime: \\\"\" + scheduledDateTime + \"\\\"\"\n      + \", isAdvancedOrder: \" + Boolean(isAdvancedOrder)\n      // +\"\\\", productList: \\\"\"+productList.replaceAll('\"', \"\\\\\\\"\")\n      + \", productList: \\\"\" + productList.replace(/\"/g, \"\\\\\\\"\")\n      + \"\\\") {\\n    msgId\\n    message\\n    httpMethod\\n    body\\n    orderId\\n    paymentUrl\\n    promoCodeMessage\\n    status\\n    statusCode\\n  }\\n}\\n\",\n    variables: {}\n  };\n  var graphql = JSON.stringify(obj)\n  const request = new Request(myRequest, { body: graphql });\n  // 1 sec delay before place order to avoid delay rendering error\n  await timeout(1000)\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"placeUserOrderSqs result\", result);\n      // console.log(JSON.stringify(obj.query).replaceAll(\"\\\\n\", \"\").replaceAll(\"\\\\\", \"\").replaceAll('\\\\\"', '\"'));\n      return result.data.placeUserOrderSqs;\n    })\n    .catch((error) => error);\n};\nconst placeUserOrderSqsPickUp = async (values) => {\n  const { productList, scheduledDateTime, isAdvancedOrder, token, storeId, noteToRider, miscellaneousInfo, promoCode } = values;\n  const { deliveryFee, isCulteryRequested, remarks } = miscellaneousInfo;\n\n  var graphql = JSON.stringify({\n    query: \"mutation MyMutation {\\n  placeUserOrderSqs(deliveryAddress: \\\"\"\n      + \"\\\", token: \\\"\" + token\n      + \"\\\", storeId: \\\"\" + storeId\n      + \"\\\", remarks: \\\"\" + remarks\n      + \"\\\", paymentMethod: \\\"TNGMP\\\", orderType: \\\"PickUp\\\", noteToRider: \\\"\" + noteToRider\n      + \"\\\", deliveryLatitude: \\\"\"\n      + \"\\\", deliveryLongitude: \\\"\"\n      + \"\\\", deliveryFee: \" + deliveryFee\n      + \", floorOrUnit: \\\"\"\n      + \"\\\", requiredCutlery: \" + isCulteryRequested\n      + \", promoCode: \\\"\" + promoCode\n      + \"\\\", scheduledDateTime: \\\"\" + scheduledDateTime + \"\\\"\"\n      + \", isAdvancedOrder: \" + Boolean(isAdvancedOrder)\n      // +\"\\\", productList: \\\"\"+productList.replaceAll('\"', \"\\\\\\\"\")\n      + \", productList: \\\"\" + productList.replace(/\"/g, \"\\\\\\\"\")\n      + \"\\\") {\\n    msgId\\n    message\\n    httpMethod\\n    body\\n    orderId\\n    paymentUrl\\n    promoCodeMessage\\n    status\\n    statusCode\\n  }\\n}\\n\",\n    variables: {}\n  });\n  const request = new Request(myRequest, { body: graphql });\n\n  // 1 sec delay before place order to avoid delay rendering error\n  await timeout(1000)\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"placeUserOrderSqsPickUp result\", result.data.placeUserOrderSqs);\n      return result.data.placeUserOrderSqs;\n    })\n    .catch((error) => error);\n};\nconst getPlaceUserOrderMessage = (msgId, token) => {\n  var graphql = JSON.stringify({\n    query: `query MyQuery {\\n  getPlaceUserOrderMessage(msgId: \"${msgId}\", token: \"${token}\") {\\n    status\\n    body\\n    httpMethod\\n    message\\n    msgId\\n    orderId\\n    paymentUrl\\n    promoCodeMessage\\n    statusCode\\n  }\\n}`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"getPlaceUserOrderMessage result\", result);\n      return result.data.getPlaceUserOrderMessage;\n    })\n    .catch((error) => error);\n};\n// call checkCart before calling placeUserOrderSqsPickUp to check product availabilit y, delivery fee (for Delivery) and price (for PickUp)\nconst checkCart = (values) => {\n  // console.log(`values`, values);\n  const { productList, scheduledDateTime, deliveryAddress, token, storeId, orderType, distance, promoCode } = values;\n\n  let obj, graphql;\n  let _promocode = promoCode === '' ? '' : \"\\\", promoCode: \\\"\" + promoCode\n  if (orderType === 'Delivery') {\n    const { address, latitude, longitude } = deliveryAddress;\n    const lat = latitude;\n    const lng = longitude;\n    if (productList !== null && typeof productList === 'string') {\n      obj = {\n        query: \"query MyQuery {\\n  checkCart(paymentType: \\\"TNGMP\\\", productList: \\\"\" +\n          productList.replace(/\"/g, \"\\\\\\\"\")\n          // productList.replaceAll('\"', \"\\\\\\\"\")\n          + \"\\\", orderType: \\\"\" + orderType\n          + _promocode\n          + \"\\\", scheduledDateTime: \\\"\" + scheduledDateTime\n          + \"\\\", storeId: \\\"\" + storeId\n          + \"\\\", distance: \" + distance\n          + \", token: \\\"\" + token\n          + \"\\\", deliveryAddress: \\\"\" + address\n          + \"\\\", addressLongitude: \\\"\" + lng\n          + \"\\\", addressLatitude: \\\"\" + lat\n          + \"\\\") {\\n    freeDeliveryMessage\\n     deliverySurchargeAmount\\n     basketValue\\n     deliveryDiscountAmount\\n    deliveryFee\\n    errorMessage\\n  statusCode\\n    promoTitle\\n    totalPromoDiscount\\n    products {\\n      price\\n     discountedPrice\\n      title\\n    isOutOfStock\\n     status\\n    customerCartProductId\\n     quantity\\n    pickupMaximumQuantity\\n        mandatoryItem\\n        image\\n        ecommerceMaximumQuantity\\n   isFreeItem\\n }\\n  }\\n}\",\n        variables: {}\n      };\n    }\n    graphql = JSON.stringify(obj);\n  } else {\n    if (productList !== null && typeof productList === 'string') {\n      obj = {\n        query: \"query MyQuery {\\n  checkCart(paymentType: \\\"TNGMP\\\", productList: \\\"\" +\n          productList.replace(/\"/g, \"\\\\\\\"\")\n          // productList.replaceAll('\"', \"\\\\\\\"\")\n          + \"\\\", orderType: \\\"\" + orderType\n          + _promocode\n          + \"\\\", scheduledDateTime: \\\"\" + scheduledDateTime\n          + \"\\\", storeId: \\\"\" + storeId\n          + \"\\\", distance: \" + distance\n          + \", token: \\\"\" + token\n          + \"\\\", deliveryAddress: \\\"\"\n          + \"\\\", addressLongitude: \\\"\"\n          + \"\\\", addressLatitude: \\\"\"\n          + \"\\\") {\\n     deliveryFee\\n    errorMessage\\n  statusCode\\n   promoTitle\\n    totalPromoDiscount\\n    products {\\n      price\\n      title\\n    isOutOfStock\\n     status\\n     discountedPrice\\n    customerCartProductId\\n     quantity\\n    pickupMaximumQuantity\\n        mandatoryItem\\n        image\\n        ecommerceMaximumQuantity\\n   isFreeItem\\n }\\n  }\\n}\",\n        variables: {}\n      };\n    }\n    graphql = JSON.stringify(obj);\n  }\n\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log('values passed into checkCart',values);\n      // const text = JSON.stringify(obj.query).replaceAll(\"\\\\n\", \"\").replaceAll(\"\\\\\", \"\").replaceAll('\\\\\"', '\"');\n      // const addBackslash = (text) => {\n      //   return text.replaceAll('\"', '\\\"')\n      // }\n      // console.log(addBackslash(text));\n      // console.log(\"checkCart result\", result.data.checkCart);\n      return result.data.checkCart;\n    })\n    .catch((error) => error);\n};\n\n// Login\nconst tNGCheckMember = (authCode, email) => {\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  tNGCheckMember(authCode: \"${authCode}\", email:\"${email}\") {\\n    SignedToken\\n    Status\\n    Token\\n    isFreeItem\\n    otpRequired\\n    promoDiscount\\n    sessionID\\n    Message\\n    firstUserLogin\\n  }\\n}`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"tNGCheckMember result\", result.data.tNGCheckMember);\n      return result.data.tNGCheckMember;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n// Upload Image\nconst generateS3UploadLink = (params) => {\n  const { fileName, folderName, token } = params\n  var graphql = JSON.stringify({\n    query: `mutation MyMutation {\\n  generateS3UploadLink(fileName: \"${fileName}\", folderName: \"${folderName}\", token: \"${token}\", platform: \"tngmp\")\\n}`,\n    variables: {}\n  })\n  const request = new Request(myRequest, { body: graphql });\n\n  return fetch(request)\n    .then((response) => {\n      if (!response.ok) throw new Error(\"Network response was not ok\");\n      return response.json();\n    })\n    .then((result) => {\n      // console.log(\"generateS3UploadLink result\", result.data.generateS3UploadLink);\n      return result.data.generateS3UploadLink;\n    })\n    .catch((error) => {\n      // console.log(\"error\", error);\n      return error;\n    });\n};\n\n\nexport {\n  getCatalogItemByProductId,\n  getAllCategories,\n  getAllCatalogItemsByCategoryOrCatalogId,\n  getAllCatalogItemsByCatalogId,\n  getAllCatalogItemsByProductTaggingId,\n  getLandingProductListing,\n\n  getAllStoresInfo,\n  searchStoresInfoOnPickUp,\n  getNearbyStores,\n\n  getUserCompletedOrder,\n  getUserPendingOrder,\n  getOrderDetailList,\n  getOrderReviewList,\n\n  userGetProfile,\n  getFavAddressList,\n  removeUserFavAddressList,\n  addUserFavAddressList,\n  updateUserFavAddressList,\n\n  submitOrderReview,\n  sendOrderReceipt,\n\n  getHomePageBanner,\n  getHomePageBannerDetail,\n\n  getRecommendations,\n  getCartRecommendations,\n\n  searchItem,\n  getTrendingList,\n\n  placeUserOrderSqs,\n  getPlaceUserOrderMessage,\n  checkCart,\n  placeUserOrderSqsPickUp,\n  tNGCheckMember,\n\n  generateS3UploadLink,\n};\n","import { useEffect, useState } from 'react';\n\n// Track if other component is using the script before removing from body\nlet scriptSubscriber = {};\n\nconst useScript = (url, scriptObjectName) => {\n\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n\n    // Check if the library has already loaded, we don't want to load multiple times\n    if (!!scriptObjectName && !!window[scriptObjectName]) {\n      return;\n    }\n\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n    script.onload = () => setHasLoaded(true);\n\n    document.body.appendChild(script);\n    \n    if (!scriptSubscriber[scriptObjectName]) {\n      scriptSubscriber[scriptObjectName] = 1;\n    } else {\n      scriptSubscriber[scriptObjectName] = scriptSubscriber[scriptObjectName] + 1;\n    }\n\n    return () => {\n      scriptSubscriber[scriptObjectName] = scriptSubscriber[scriptObjectName] - 1;\n      if (scriptSubscriber[scriptObjectName] < 1) {\n        document.body.removeChild(script);\n        window[scriptObjectName] = undefined;\n      }\n        \n    }\n  }, [scriptObjectName, url]);\n\n  return [ hasLoaded ]\n};\n\nexport default useScript;","import React, { useState, useEffect, useRef } from \"react\";\nimport { getFavAddressList } from '@API/api';\nimport useScript from \"@Hook/useScript\";\nimport { config } from \"src/constants/config\";\nimport { useAlertContext } from \"@Context/AlertContext\";\nimport { v4 as uuidv4 } from 'uuid';\nimport cloneDeep from 'lodash/cloneDeep'\n\nconst AddressContext = React.createContext({\n  addresses: [],\n  selectedAddress: undefined,\n  getAddressById: (addrId) => { },\n  addAddress: (addr) => { },\n  removeAddress: (addrId) => { },\n  editAddress: (addrId, addr) => { },\n  editingAddrInCart: false,\n  setEditingAddrInCart: () => { },\n  resetSelectedAddress: () => { }\n});\n\nconst AddressProvider = ({ children }) => {\n  const [scriptHasLoaded] = useScript(\n    `https://maps.googleapis.com/maps/api/js?key=${config.googleMapKey}&libraries=places`,\n    \"google\"\n  );\n  const { pushAlertPopUp, tngSetStorage, tngGetStorage } = useAlertContext();\n  const [selectedAddress, setSelectedAddress] = useState(undefined);\n  const [addresses, setAddresses] = useState([]);\n  const [doneGettingAddrAfterLogin, setDoneGettingAddrAfterLogin] = useState(false);\n  const [editingAddrInCart, setEditingAddrInCart] = useState(false);\n  const didMountRef = useRef(false);\n  const didMountRef2 = useRef(false);\n\n  useEffect(() => {\n    tngGetStorage('addresses',\n      (data) => {\n        if (Array.isArray(data)) {\n          setAddresses(data);\n          tngGetStorage('selectedAddress', (selectedAddr) => {\n            // alert(`Addresses from cache: ${JSON.stringify(data)}`)\n            // alert(`selectedAddress from cache: ${JSON.stringify(selectedAddr)}`)\n            if (!!data.find(addr => selectedAddr.id === addr.id)) {\n              // alert('set selectedAddress')\n              setSelectedAddress(selectedAddr)\n            }\n          })\n        }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  const resetSelectedAddress = (data) => {\n    setSelectedAddress(data)\n    tngSetStorage('selectedAddress', data);\n  }\n  \n  useEffect(() => {\n    if (Array.isArray(addresses) && didMountRef.current) {\n      tngSetStorage('addresses', addresses);\n    } else {\n      didMountRef.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addresses])\n\n  useEffect(() => {\n    // if (!!selectedAddress && !!addresses.find(addr => addr.id === selectedAddress.id)) {\n    if (didMountRef2.current) {\n      tngSetStorage('selectedAddress', selectedAddress);\n    } else {\n      didMountRef2.current = true;\n    }\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedAddress])\n\n  const getAddressById = (addrId) => {\n    const temp = addresses.find((addr) => addr.id === addrId);\n    return temp;\n  };\n\n  const getAddrObjToSave = (addr) => {\n    return {\n      title: addr.title,\n      address: addr.address,\n      notes: addr.notes,\n      address2: addr.address2,\n      id: `${uuidv4()}`,\n      // place: addr.place,\n      customerFavouriteAddressId: addr.customerFavouriteAddressId,\n      latitude: addr.latitude,\n      longitude: addr.longitude,\n      city: addr.city,\n      country: addr.country,\n      state: addr.state,\n      postal: addr.postal,\n    }\n  }\n\n  // index starts from 1\n  const addAddress = (addr, closeModalFunction = () => { }) => {\n    const newAddr = getAddrObjToSave(addr);\n    setAddresses((addrs) => [\n      ...addrs,\n      newAddr\n    ]);\n    closeModalFunction(false);\n    return newAddr;\n  }\n\n  const removeAddress = (addrId) => {\n    // const temp = cloneDeep(addresses);\n    // const result = temp.filter((addr) => addr.id !== addrId);\n    // setAddresses(result);\n    setAddresses((addrs) => addrs.filter((addr) => addr.id !== addrId));\n\n    // Set current address to null if deleted address id is this\n    // alert(`remove address id ${addrId}`)\n    // alert(`selectedAddress ${JSON.stringify(selectedAddress)}`)\n    if (addrId === selectedAddress?.id) {\n      setSelectedAddress(undefined);\n    }\n  }\n\n  const editAddress = (addrId, addr) => {\n    setSelectedAddress(addr);\n    setAddresses((addrs) => {\n      const temp = [...addrs];\n      const targetAddr = temp.find(a => a.id === addrId);\n      Object.assign(targetAddr, addr);\n      targetAddr.id = addrId;\n      return temp;\n    });\n    // const temp = cloneDeep(addresses);\n    // const targetAddr = temp.find(a => a.id === addrId);\n    // Object.assign(targetAddr, addr);\n    // setAddresses(temp);\n  };\n\n  const getFavAddr = async (token) => {\n    if (!doneGettingAddrAfterLogin) {\n      setDoneGettingAddrAfterLogin(true);\n      if (token !== null) {\n        getFavAddressList(token).then(addressesRes => {\n          // if got addresses from localStorage which is extra aka not in backend addresses\n          // exclude them\n          if (!!addressesRes && Array.isArray(addressesRes)) {\n            // alert(`addressesRes ${JSON.stringify(addressesRes)}`)\n            // not using customerFavouriteAddressId to check since address from\n            // cache may not have customerFavouriteAddressId\n            const exactAddresses = addresses.filter(addr => addressesRes.some(backendAddr => \n              backendAddr.address + \"\" === addr.address + \"\" && \n              backendAddr.latitude + \"\" === addr.latitude + \"\" &&\n              backendAddr.longitude +\"\" === addr.longitude + \"\"))\n            setAddresses(() => exactAddresses)\n            // alert(`exactAddresses ${JSON.stringify(exactAddresses)}`)\n            addressesRes.forEach(addr => {\n              // add only if this addr from backend is not in list\n              const foundAddrIdx = exactAddresses.findIndex(addrFromStorage => \n                addrFromStorage.address + \"\" === addr.address + \"\" && \n                addrFromStorage.latitude + \"\" === addr.latitude + \"\" &&\n                addrFromStorage.longitude +\"\" === addr.longitude + \"\");\n                // alert(`address foundAddrIdx ${foundAddrIdx}`)\n              if (foundAddrIdx === -1) {\n                // alert('address added')\n                addAddress(addr);\n              } else {\n                setAddresses((prevAddresses) => {\n                  // else replace the address stored cuz other info may be updated\n                  const addressesCopy = cloneDeep(prevAddresses);\n                  // const idx = addressesCopy.map(a => a.customerFavouriteAddressId).indexOf(addr.customerFavouriteAddressId)\n                  // alert(`b4 replace the address on state with the values from backend ${JSON.stringify(addressesCopy[foundAddrIdx])}`)\n                  addressesCopy[foundAddrIdx] = { ...addr, id: addressesCopy[foundAddrIdx].id };\n                  // alert(`after replace the address on state with the values from backend ${JSON.stringify(addressesCopy[foundAddrIdx])}`)\n                  return addressesCopy\n                });\n              }\n            });\n          }\n        }).catch((err) => {\n          // console.log(\"error\", error)\n          pushAlertPopUp(`Problem connecting to server. Please try again later`);\n        });\n      }\n    }\n  }\n\n  // for calling API only\n  const generateValuesForAddAddr = (addr, user = null) => {\n    // console.log('addr', addr)\n    let currentPosition;\n    if (addr.place.geometry) {\n      currentPosition = addr.place.geometry.location;\n    } else {\n      currentPosition = {\n        lat: () => addr.latitude,\n        lng: () => addr.longitude\n      }\n    }\n    const city = addr.place.address_components.find(component => {\n      return !!component.types.find(text => text === 'locality');\n    })\n    const country = addr.place.address_components.find(component => {\n      return !!component.types.find(text => text === 'country');\n    })\n    const state = addr.place.address_components.find(component => {\n      return !!component.types.find(text => text === 'administrative_area_level_1');\n    })\n    const postal = addr.place.address_components.find(component => {\n      return !!component.types.find(text => text === 'postal_code');\n    })\n    const values = {\n      address: addr.address,\n      address2: \"\",\n      title: addr.title,\n      longitude: currentPosition.lng(),\n      latitude: currentPosition.lat(),\n      country: country ? country.long_name : \"_\",\n      city: city ? city.long_name : \"_\",\n      state: state ? state.long_name : \"_\",\n      postal: postal ? postal.long_name : \"_\",\n      token: user ? user.token : null,\n      notes: addr.notes\n    };\n    return values;\n  }\n\n  return (<AddressContext.Provider value={{ addresses, addAddress, removeAddress, selectedAddress, editAddress, getAddressById, getFavAddr, scriptHasLoaded, setSelectedAddress, editingAddrInCart, setEditingAddrInCart, generateValuesForAddAddr, resetSelectedAddress }}>\n    {children}\n  </AddressContext.Provider>)\n};\n\nconst useAddressContext = () => {\n  return React.useContext(AddressContext);\n};\n\nexport { AddressProvider, useAddressContext };\n","import React, { useEffect } from \"react\";\nimport { usePromoContext } from \"./PromoContext\";\nimport { useAlertContext } from '@Context/AlertContext';\nimport { useAddressContext } from '@Context/AddressContext';\nimport { useCurrency } from \"@Hook/useCurrency\";\nimport moment from 'moment';\n\nexport const ShoppingType = {\n  Delivery: \"Delivery\",\n  PickUp: \"PickUp\",\n};\n\nconst CartContext = React.createContext({\n  cart: [],\n  shoppingType: ShoppingType.Delivery,\n  deliveryInfo: {\n    name: \"\",\n    address: \"\",\n    noteToRider: \"\",\n    time: \"\",\n  },\n  miscellaneousInfo: {\n    paymentMethod: null,\n    contactNumber: null,\n    isCulteryRequested: false,\n    remarks: \"\",\n    oriDeliveryFee: 0,\n    deliveryFee: 0,\n    basketValue: null,\n    deliveryDiscountAmount: null,\n    deliverySurchargeAmount: 0,\n  },\n  addCartItem: (item) => { },\n  updateCartItemQuantity: (item) => { },\n  removeCartItem: (item, removeAll) => { },\n  getAmount: (item) => { },\n  getItemQuantity: (item) => { },\n  setMiscellaneousInfo: (misc) => { },\n  setDeliveryInfo: (deliveryInfo) => { },\n  setShoppingType: () => { },\n  replaceCart: (items) => { },\n  subtotal: 0,\n  total: 0,\n});\n\nconst CartProvider = ({ children }) => {\n  const { promoCodeInfo, freeItemCart, setFreeItemCart, promoCode, hasPromoCodeApplied } = usePromoContext();\n  const { pushAlertPopUp, tngSetStorage, tngGetStorage } = useAlertContext();\n  const { selectedAddress } = useAddressContext();\n  const { formatCurrency } = useCurrency();\n\n\n  const [shoppingType, setShoppingType] = React.useState(ShoppingType.Delivery);\n  const [deliveryInfo, setDeliveryInfo] = React.useState({\n    name: \"\",\n    address: \"\",\n    noteToRider: \"\",  // aka \"notes\" in address related component\n    time: \"asap\",\n  });\n  const [miscellaneousInfo, setMiscellaneousInfo] = React.useState({\n    paymentMethod: null,\n    contactNumber: null,\n    isCulteryRequested: false,\n    remarks: \"\",\n    deliveryFee: 0,\n    deliverySurchargeAmount: 0\n  });\n  const [cart, setCart] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(null);\n  const [total, setTotal] = React.useState(0);\n  const [subtotal, setSubtotal] = React.useState(0);\n  const [openLastItemConfirm, setOpenlastItemConfirm] = React.useState(false);\n  const [removeLastItem, setRemoveLastItem] = React.useState(null);\n  const [basketValueInfo, setBasketValueInfo] = React.useState({\n    basketValue: null,\n    freeDeliveryMessage: \"\",\n    total: 0,\n  })\n\n  const [progress, setProgress] = React.useState(0);\n\n  useEffect(() => {\n    tngGetStorage('shoppingType',\n      (data) => {\n        if (data === ShoppingType.Delivery || data === ShoppingType.PickUp)\n          setShoppingType(data)\n      })\n    tngGetStorage('cart',\n      (data) => {\n        if (data) {\n          setCart(data)\n        }\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (shoppingType === ShoppingType.Delivery || shoppingType === ShoppingType.PickUp)\n      tngSetStorage('shoppingType', shoppingType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shoppingType])\n\n  useEffect(() => {\n    if (Array.isArray(cart)) {\n      tngSetStorage('cart', cart);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cart])\n\n\n  const checkBasketValueInfo = (item) => {\n    if (item.statusCode !== 200){\n      return\n    }\n    if(item.basketValue){\n      setBasketValueInfo({\n        basketValue: item.basketValue,\n        freeDeliveryMessage: item.freeDeliveryMessage,\n      })\n    }\n  }\n  const getItemAmount = (selected) => {\n    return selected.price * selected.quantity;\n  };\n\n  const replaceCart = (items) => {\n    setCart(prevCart => [...items]);\n  };\n\n  const updateCartItemQuantity = (selected, quantity) => {\n    let cartItems = cart.map(p => ({ ...p }));\n    const selectedIndex = cartItems.findIndex((item) => {\n      if (!selected.id) {\n        return item.id === selected.productId\n      }\n      return item.id === selected.id\n    });\n    if (selectedIndex > -1) { // already have similar item in cart\n      if (shoppingType === ShoppingType.Delivery) {\n        // console.log('cartItems[selectedIndex]',cartItems[selectedIndex]);\n        if (quantity > cartItems[selectedIndex].ecommerceMaximumQuantity) {\n          pushAlertPopUp('The item quantity has exceeded the maximum order quantity');\n        } else {\n          cartItems[selectedIndex].quantity = quantity;\n        }\n      } else {\n        // console.log('cartItems[selectedIndex]',cartItems[selectedIndex]);\n        if (quantity > cartItems[selectedIndex].pickupMaximumQuantity) {\n          pushAlertPopUp('The item quantity has exceeded the maximum order quantity');\n        } else {\n          cartItems[selectedIndex].quantity = quantity;\n        }\n      }\n    } else {    // item not in cart yet\n      cartItems.push({ ...selected, quantity });\n    }\n    setCart(() => cartItems);\n  }\n\n  const removeCartItem = React.useCallback(\n    (selected, all = false, callbackIfRemovingAll, noConfirmationPopUp = true) => {\n      const cartItems = cart.map(p => ({ ...p }));\n      const selectedIndex = cart.findIndex((item) => {\n        if (!selected.id) {\n          return item.id === selected.productId\n        }\n        return item.id === selected.id\n      });\n      if (selectedIndex > -1) {\n        if (cartItems[selectedIndex].quantity > 1 && !all) {\n          cartItems[selectedIndex].quantity -= 1;\n          setCart(cartItems);\n        } else {\n          if (noConfirmationPopUp) {\n            // console.log('cartItems', cartItems);\n            cartItems.splice(selectedIndex, 1);\n            tngSetStorage('cart', cartItems);\n            setCart(cartItems);\n          } else {\n            setRemoveLastItem(() => () => {\n              if (callbackIfRemovingAll) callbackIfRemovingAll();\n              cartItems.splice(selectedIndex, 1);\n              tngSetStorage('cart', cartItems);\n              setCart(cartItems);\n            });\n            setOpenlastItemConfirm(() => true);\n          }\n        }\n      }\n    },\n    // eslint-disable-next-line\n    [cart]\n  );\n\n  const getItemQuantity = React.useCallback(\n    (selected) => {\n      const selectedIndex = cart.findIndex((item) => item.id === selected?.id);\n      return selectedIndex > -1 ? cart[selectedIndex].quantity : 0;\n    },\n    [cart]\n  );\n\n  const formatProducts = (products = []) => {\n    const after = products.map(p => {\n      return {\n        ...p,\n        id: p.productId,\n        productName: p.title,\n        productImage: p.image,\n        mandatoryItem: false\n      }\n    });\n    return after;\n  }\n\n  const setMandatoryOption = (productId, value, isFreeItem) => {\n    if (isFreeItem) {\n      const tempCart = freeItemCart.map(p => ({ ...p }));\n      const product = tempCart.find(p => p.productId === productId);\n      product['mandatoryItem'] = value;\n      setFreeItemCart(() => tempCart);\n    } else {\n      const tempCart = cart.map(p => ({ ...p }));\n      const product = tempCart.find(p => p.productId === productId);\n      product['mandatoryItem'] = value;\n      setCart(() => tempCart);\n    }\n  }\n\n  // set product become valid or invalid after changing store\n  const isSomeProductsInvalid = (\n    setHasProductInvalid,\n    products,\n    updatedCart\n  ) => {\n    // console.log('isSomeProductsInvalid', products);\n    const invalidProducts = products?.filter((p) => p.status === \"Invalid\");\n    // console.log('invalidProducts', invalidProducts);\n\n    if (invalidProducts?.length > 0) {\n      setHasProductInvalid(true);\n    } else {\n      setHasProductInvalid(false);\n    }\n    let hasProductInvalid = false;\n    // if we shud check based on a new cart updated in checkIfPriceDiff\n    const copy = updatedCart\n      ? updatedCart.map((p) => ({ ...p }))\n      : cart.map((p) => ({ ...p }));\n    // check if the copy diff. Else will run into infinite loop when promocode applied and change quantity of product\n    const cartIsDiff = copy.find((productInCart) => {\n      const theTarget = products?.find(\n        (p) => p.customerCartProductId === productInCart.productId\n      );\n      if (theTarget) {\n        if (\n          theTarget.status === \"Valid\" &&\n          productInCart[\"isDisabled\"] === false\n        ) {\n          return false;\n        } else if (\n          theTarget.status === \"Invalid\" &&\n          productInCart[\"isDisabled\"] === true\n        ) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    });\n    // console.log('cartIsDiff',cartIsDiff)\n    // console.log('freeItemCart',freeItemCart)\n    // console.log('copy',copy)\n    if (cartIsDiff || copy.length + freeItemCart.length !== products?.length) {\n      copy.forEach((productInCart) => {\n        const theTarget = products?.find(\n          (p) => p.customerCartProductId === productInCart.productId\n        );\n        if (theTarget) {\n          // need to validate cuz might be free product, they are not in cart\n          if (theTarget.status === \"Valid\") {\n            productInCart[\"isDisabled\"] = false;\n          } else {\n            productInCart[\"isDisabled\"] = true;\n            hasProductInvalid = true;\n          }\n        }\n      });\n\n      // console.log('copy', copy);\n      replaceCart(copy);\n      return hasProductInvalid;\n    }\n  };\n  // when token passed means getPlaceUser-OrderSqsData called after logged in\n  const getPlaceUserOrderSqsData = (cart, timeLength, orderType, token, applyPromoCode = false, timeLabel, selectedStore,_hasPromocodeApplied=false) => {\n    let dateObj;\n    let isAdvancedOrder;\n    // console.log(timeLabel);\n    if (timeLabel.label.toLowerCase().includes('asap')) {\n      dateObj = new Date(new Date().getTime() + timeLength * 60000)\n      isAdvancedOrder = false\n    } else {\n      dateObj = moment(timeLabel.label, [\"h:mm A\"]).toDate();\n      isAdvancedOrder = true\n    }\n    // console.log(dateObj);\n\n    // limit the data pass to backend\n    const tempCombinedCart = [...cart];\n    const formattedCart = tempCombinedCart.map(p => {\n      const {\n        discountedPrice,\n        image,\n        mandatoryItem,\n        price,\n        productId,\n        quantity,\n        sku,\n        title } = p;\n      return {\n        discountedPrice,\n        image,\n        mandatoryItem: mandatoryItem ? 1 : 0,\n        price,\n        productId,\n        quantity,\n        sku,\n        title,\n      }\n    });\n    return {\n      productList: JSON.stringify(formattedCart),\n      deliveryAddress: selectedAddress ?? null,\n      floorOrUnit: selectedAddress?.address2,\n      scheduledDateTime: dateObj.toISOString(),\n      isAdvancedOrder: isAdvancedOrder,\n      distance: selectedStore.distance,\n      token: token,      // needed for check-Cart when applying promocode\n      orderType: orderType,   // needed for check-Cart\n      storeId: selectedStore ? selectedStore.storeId : null,\n      noteToRider: deliveryInfo.noteToRider,\n      miscellaneousInfo: miscellaneousInfo,\n      promoCode: applyPromoCode && _hasPromocodeApplied ? promoCode : \"\"  // do not apply promo code for usual check-Cart\n    };\n  }\n\n  const checkIfDeliveryFreeAfterCheckCart = (basketValue = 0, deliveryDiscountAmount = 0, oriDeliveryFee = 0, deliverySurchargeAmount = 0, isPromoCodeApplying=false) => {\n    // console.log(basketValue, deliveryDiscountAmount, oriDeliveryFee);\n    let promoCodeDiscount = promoCodeInfo.totalPromoDiscount\n    if (!isPromoCodeApplying){\n      promoCodeDiscount = 0\n    }\n    if ((subtotal - promoCodeDiscount) > basketValue && deliveryDiscountAmount) {\n      let net = oriDeliveryFee - deliveryDiscountAmount\n      if (net < 0) {\n        net = 0;\n      }\n      setMiscellaneousInfo({ ...miscellaneousInfo, deliveryFee: net, basketValue: basketValue, deliveryDiscountAmount: deliveryDiscountAmount, oriDeliveryFee: oriDeliveryFee, deliverySurchargeAmount: deliverySurchargeAmount });\n    } else {\n      setMiscellaneousInfo({ ...miscellaneousInfo, deliveryFee: oriDeliveryFee, basketValue: basketValue, deliveryDiscountAmount: deliveryDiscountAmount, oriDeliveryFee: oriDeliveryFee, deliverySurchargeAmount: deliverySurchargeAmount });\n    }\n  }\n  const checkIfDeliveryFreeWhenCartChanged = (subtotal) => {\n    const { basketValue = 0, deliveryDiscountAmount = 0, oriDeliveryFee = 0 } = miscellaneousInfo;\n    if ((subtotal - promoCodeInfo.totalPromoDiscount) > basketValue && deliveryDiscountAmount) {\n      let net = oriDeliveryFee - deliveryDiscountAmount\n      if (net < 0) {\n        net = 0;\n      }\n      setMiscellaneousInfo({ ...miscellaneousInfo, deliveryFee: net, basketValue: basketValue, deliveryDiscountAmount: deliveryDiscountAmount, oriDeliveryFee: oriDeliveryFee });\n    } else {\n      setMiscellaneousInfo({ ...miscellaneousInfo, deliveryFee: oriDeliveryFee, basketValue: basketValue, deliveryDiscountAmount: deliveryDiscountAmount, oriDeliveryFee: oriDeliveryFee });\n    }\n  }\n\n  React.useEffect(() => {\n    setSubtotal(() =>\n      cart.reduce((sum, item) => {\n        if (item.discountedPrice < item.price) {\n          return (sum += item.discountedPrice * item.quantity)\n        }\n        return (sum += item.price * item.quantity)\n      }, 0)\n    );\n  }, [cart]);\n\n  // React.useEffect(() => {\n  //   // console.log('subtotal changed', subtotal);\n  //   checkIfDeliveryFreeWhenCartChanged(subtotal);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [subtotal]);\n\n  React.useEffect(() => {\n    setTotal(() => {\n      const tempTotal = (subtotal - promoCodeInfo.totalPromoDiscount) + miscellaneousInfo.deliveryFee + miscellaneousInfo.deliverySurchargeAmount;\n      // console.log(`subtotal`, subtotal);\n      // console.log(`miscellaneousInfo`, miscellaneousInfo);\n      // console.log(`promoCodeInfo`, promoCodeInfo);\n      // console.log(`tempTotal`, tempTotal);\n      return tempTotal < 0 ? 0 : tempTotal;\n    });\n  }, [cart, subtotal, miscellaneousInfo, promoCodeInfo]);\n\n  React.useEffect(() => {\n    if(basketValueInfo.basketValue){\n      let percentage = (subtotal / basketValueInfo.basketValue) * 100\n      if(percentage < 100){\n        const previousPercentage = progress\n        if (previousPercentage === 100){\n          let value = basketValueInfo.basketValue - subtotal\n          setBasketValueInfo({...basketValueInfo, freeDeliveryMessage: `${formatCurrency(value)} more to free delivery`})\n        }\n        setProgress(percentage)\n      } else {\n        setProgress(100)\n      }\n    }\n  }, [basketValueInfo.basketValue, subtotal])\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        deliveryInfo,\n        miscellaneousInfo,\n        replaceCart,\n        setDeliveryInfo,\n        setMiscellaneousInfo,\n        // addCartItem,\n        removeCartItem,\n        getItemAmount,\n        getItemQuantity,\n        updateCartItemQuantity,\n        isLoading,\n        total,\n        subtotal,\n        setShoppingType,\n        shoppingType,\n        formatProducts,\n        setMandatoryOption,\n        setIsLoading,\n        openLastItemConfirm,\n        setOpenlastItemConfirm,\n        removeLastItem,\n        getPlaceUserOrderSqsData,\n        isSomeProductsInvalid,\n        checkIfDeliveryFreeAfterCheckCart,\n        basketValueInfo,\n        checkBasketValueInfo,\n        progress,\n        setProgress\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nconst useCartContext = () => {\n  return React.useContext(CartContext);\n};\n\nexport { CartProvider, useCartContext };\n","import React, { useRef } from \"react\";\nimport { tNGCheckMember, userGetProfile } from \"@API/api\";\nimport { useAddressContext } from \"./AddressContext\";\nimport { useAlertContext } from \"@Context/AlertContext\";\nimport { routes } from \"src/constants/routes.constant\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserContext = React.createContext({\n  user: { token: \"\" },\n  isLoggedIn: false,\n  isLoading: false,\n  isNeedEmail: false,\n  login: () => {},\n  updateProfile: () => {},\n});\n\nconst UserProvider = ({ children }) => {\n  const history = useHistory();\n  const { getFavAddr } = useAddressContext();\n  const { pushAlertPopUp } = useAlertContext();\n  const [user, setUser] = React.useState({\n    token: \"\",\n  });\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isUserLoading, setIsUserLoading] = React.useState(false);\n  const loggingInRef = useRef(false);\n  const [callback, setCallback] = React.useState(null);\n  const [isNeedEmail, setIsNeedEmail] = React.useState(false);\n  const [canCallCallback, setCanCallCallback] = React.useState(true);\n  const setIsLoading = (value) => {\n    setIsUserLoading(value);\n  };\n\n  // only used once after login\n  React.useEffect(() => {\n    if (loggingInRef.current && callback && canCallCallback) {\n      loggingInRef.current = false;\n      callback();\n      setCallback(null);\n    }\n  }, [callback, canCallCallback, pushAlertPopUp]);\n\n  const login = (callback, email = null) => {\n    setIsLoading(true);\n    setIsNeedEmail(false);\n    try {\n      // eslint-disable-next-line no-undef\n      my.postMessage({ action: \"login\" });\n      // eslint-disable-next-line no-undef\n      my.onMessage = function (e) {\n        if (e.error) {\n          // user click back button\n          setIsLoading(false);\n        }\n        if (e.action === \"login\") {\n          // first assume user ady a FM user\n          const email = \"\";\n          return tNGCheckMember(e.authCode.authCode, email)\n            .then((res) => {\n              // check if the firstUserLogin === \"TNGFirstAttempt\"\n              // if true, direct them to signIn page\n              // call callbacks contain history.push except applying promocode\n              // so we need to append history.push after those callback with history.push\n              // redirect to signIn page\n              // to test this: fake that the firstUserLogin === \"TNGFirstAttempt\" is true\n              if (res.SignedToken) {\n                let tempUser = { token: res.SignedToken };\n                setUser(tempUser);\n                setIsLoggedIn(true);\n                getFavAddr(res.SignedToken);\n                // call to get user profile info\n                return userGetProfile(res.SignedToken)\n                  .then((response) => {\n                    setIsLoading(false);\n                    // console.log('response.PrimaryEmail',response.PrimaryEmail)\n                    loggingInRef.current = true;\n\n                    // check if this is user first time using FM on TnG\n                    if (res.firstUserLogin === \"TNGFirstAttempt\") {\n                      setCanCallCallback(false);\n                      history.push(routes.proceed);\n                    }\n                    setCallback(() => {\n                      return () =>\n                        callback(res.SignedToken, response.PrimaryEmail);\n                    }); // set callback here wont have bug but at line 77 will trigger bug of not redirecting to orders page\n                    const fulfilledValue = { ...tempUser, ...response };\n                    setUser((tempUser) => fulfilledValue);\n                    return fulfilledValue;\n                  })\n                  .catch((err) => {\n                    pushAlertPopUp(\n                      `Problem connecting to server. Please try again later`\n                    );\n                    setIsLoggedIn(true);\n                    callback(tempUser.token);\n                  });\n              } else {\n                pushAlertPopUp(\n                  `Problem connecting to server. Please try again later`\n                );\n                throw new Error(\"SignedToken is null. Res from tNGCheckMember\");\n              }\n            })\n            .catch((err) => {\n              // eslint-disable-next-line no-undef\n              my.postMessage({ action: \"login error\", error: err });\n              // if (err && err.Message.includes('No email is found')) {\n              //   setIsNeedEmail(true)\n              // }\n            })\n            .then(() => setIsLoading(false));\n        } else if (e.action === \"uploadFile\") {\n          if (e.body.statusCode !== \"200\") {\n            if (e.body.error === 12) {\n              pushAlertPopUp(`Failed! Image size exceeds 15 MB.`);\n            } else {\n              pushAlertPopUp(`Failed to upload image. Please try again`);\n            }\n          }\n        }\n      };\n    } catch (error) {\n      setIsLoading(false);\n      let tempUser = {\n        name: \"Alia Arina\",\n        token:\n          \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6IiIsIm5hbWVpZCI6IjE5MDAwMTQ3NiIsIm5iZiI6MTY3MTQwOTg2MCwiZXhwIjoxNjc5MTg1ODYwLCJpYXQiOjE2NzE0MDk4NjAsImlzcyI6InNlbGYiLCJhdWQiOiJodHRwczovL2ZtZWNvbW1hZG1pbi5xbC5jb20ubXkvIn0.cc6AQoeHON5vMXKg4EgPsPa-uR72pZJsyrLa9Lvv5sY\",\n      };\n      console.log(`Logged in as ${tempUser.name}.`);\n\n      getFavAddr(tempUser.token);\n      userGetProfile(tempUser.token).then((response) => {\n        setUser({ ...tempUser, ...response });\n      });\n      setIsLoggedIn(true);\n      // return error;\n    }\n  };\n\n  const updateProfile = (value) => {\n    // setIsLoading(true);\n  };\n\n  return (\n    <>\n      <UserContext.Provider\n        value={{\n          user,\n          isLoggedIn,\n          isNeedEmail,\n          isUserLoading,\n          login,\n          updateProfile,\n          setCanCallCallback,\n          canCallCallback,\n        }}\n      >\n        {children}\n      </UserContext.Provider>\n    </>\n  );\n};\n\nconst useUserContext = () => {\n  return React.useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };\n","import React, { useState } from \"react\";\nimport { useAlertContext } from \"./AlertContext\";\n\n// default values\nconst PromoContext = React.createContext({\n  isPromoCodeApplying: false,\n  promoCode: '',\n  promoCodeInfo: {\n    totalPromoDiscount: 0,\n    promoTitle: '',\n  },\n  setPromoCode: () => {},\n  setIsPromoCodeApplying: () => {},\n  setPromoCodeInfo: () => {},\n  removePromoCode: () => {},\n  checkPromoStatus: () => {},\n  freeItemCart: [],\n  setFreeItemCart: () => {}\n});\n\nconst PromoProvider = ({ children }) => {\n  const { pushAlertPopUp } = useAlertContext();\n  const [promoCode, setPromoCode] = useState('');\n  const [isPromoCodeApplying, setIsPromoCodeApplying] = useState(false);\n  const [hasPromoCodeApplied, setHasPromoCodeApplied] = useState(false);\n  const [promoCodeInfo, setPromoCodeInfo] = useState({\n    totalPromoDiscount: 0,\n    promoTitle: '',\n    promoCode: ''\n  });\n  const [freeItemCart, setFreeItemCart] = useState([]);\n\n  const checkPromoStatus = (errorMessage, promoCode, promoTitle, totalPromoDiscount, isFreeProductDiscountType, returnedProducts) => {\n\n    if(errorMessage === \"Promo code has been applied successfully\"){\n      // if first time applying promocode OR current latest promocode diff with previously applied promocode \n      setIsPromoCodeApplying(true);\n      // if promo type is Discount on Transaction\n      setPromoCodeInfo({\n        totalPromoDiscount: parseFloat(totalPromoDiscount),\n        promoTitle: promoTitle,\n        promoCode: promoCode\n      });\n      if(!isPromoCodeApplying){\n        pushAlertPopUp('Promo code has been applied successfully');\n        if(isFreeProductDiscountType){\n          let tempReturnedProducts = [...returnedProducts];\n          tempReturnedProducts = tempReturnedProducts.filter(p => p.isFreeItem);\n          \n          tempReturnedProducts = tempReturnedProducts.map(p => {\n            return {\n              discountedPrice: p.discountedPrice,\n              image: p.image,\n              productImage: p.image,\n              mandatoryItem: p.mandatoryItem,\n              price: p.price,\n              productId: p.customerCartProductId,\n              quantity: p.quantity,\n              sku: p.sku,\n              title: p.title,\n              isFreeItem: p.isFreeItem,\n              id: p.productId, \n              productName: p.title, \n              isDisabled: p.status !== \"Valid\"\n            }\n          });\n          setFreeItemCart(tempReturnedProducts)\n        }\n      }\n      return true;\n    }else{\n      // console.log('instead errorMessage get: ',errorMessage);\n      if(errorMessage){\n      pushAlertPopUp(`${errorMessage}`);\n      }\n      removePromoCode();\n      return false;\n    }\n  }\n\n  const removePromoCode = (event) => {\n    setIsPromoCodeApplying(false);\n    setPromoCode(\"\");\n    setPromoCodeInfo({\n      totalPromoDiscount: 0,\n      promoTitle: '',\n      promoCode: ''\n    });\n    setFreeItemCart([]);\n  }\n\n  return (\n    <PromoContext.Provider\n      value={{\n        isPromoCodeApplying,\n        promoCode,\n        promoCodeInfo,\n        setIsPromoCodeApplying,\n        setPromoCode,\n        setPromoCodeInfo,\n        removePromoCode,\n        checkPromoStatus,\n        freeItemCart,\n        setFreeItemCart,\n        hasPromoCodeApplied,\n        setHasPromoCodeApplied\n      }}\n    >\n      {children}\n    </PromoContext.Provider>\n  );\n};\n\nconst usePromoContext = () => {\n  return React.useContext(PromoContext);\n};\n\nexport { PromoProvider, usePromoContext };\n","export var getRandomLocation = function (latitude, longitude, radiusInMeters) {\n\n  var getRandomCoordinates = function (radius, uniform) {\n      // Generate two random numbers\n      var a = Math.random(),\n          b = Math.random();\n\n      // Flip for more uniformity.\n      if (uniform) {\n          if (b < a) {\n              var c = b;\n              b = a;\n              a = c;\n          }\n      }\n\n      // It's all triangles.\n      return [\n          b * radius * Math.cos(2 * Math.PI * a / b),\n          b * radius * Math.sin(2 * Math.PI * a / b)\n      ];\n  };\n\n  var randomCoordinates = getRandomCoordinates(radiusInMeters, true);\n\n  // Earths radius in meters via WGS 84 model.\n  var earth = 6378137;\n\n  // Offsets in meters.\n  var northOffset = randomCoordinates[0],\n      eastOffset = randomCoordinates[1];\n\n  // Offset coordinates in radians.\n  var offsetLatitude = northOffset / earth,\n      offsetLongitude = eastOffset / (earth * Math.cos(Math.PI * (latitude / 180)));\n\n  // Offset position in decimal degrees.\n  return {\n      latitude: latitude + (offsetLatitude * (180 / Math.PI)),\n      longitude: longitude + (offsetLongitude * (180 / Math.PI))\n  }\n};\n\nexport function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2-lat1);  // deg2rad below\n    var dLon = deg2rad(lon2-lon1); \n    var a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n      ; \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in km\n    return d;\n  }\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\nexport const getPositionOptions = {\n  enableHighAccuracy: false,\n  timeout: 4000,\n  maximumAge: 0\n};\nfunction getUserCurrentLocationByHTML(onRetrievedPosition, onFailedGettingUserLocation, onNotAgreedSharing, pushAlertPopUp){\n  \n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      const pos = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      // pushAlertPopUp('Able to get location using HTML', JSON.stringify(pos));\n      // console.log('Able to get location using HTML', JSON.stringify(pos));\n      onRetrievedPosition(pos);\n      \n    }, function(res) {\n      // Handle here if get current location error has occurred\n      pushAlertPopUp('Please enable GPS service');\n      onFailedGettingUserLocation();\n    },getPositionOptions);\n  } else {\n    pushAlertPopUp(`Problem retrieving location, please try again`);\n    // Handle here if user not agreed to share current location\n    // onNotAgreedSharing();\n  }\n}\n\nexport function getUserCurrentLocation(onRetrievedPosition = (pos) => {}, onFailedGettingUserLocation = () => {}, onNotAgreedSharing = () => {}, pushAlertPopUp) {\n    try{\n      // eslint-disable-next-line no-undef\n      my.getLocation({\n        success: (res) => {\n          const pos = {\n            lat: parseFloat(res.latitude),\n            lng: parseFloat(res.longitude)\n          };\n          \n          onRetrievedPosition(pos);\n        },\n        fail(res) {\n          switch (res.error) {\n            case \"11\":\n              pushAlertPopUp('Please enable GPS service');\n              break;\n            case \"12\":\n              pushAlertPopUp('Problem connecting network, please try again');\n              break;\n            case \"13\":\n              pushAlertPopUp('Problem retrieving location. Please try again later');\n              break;\n            case \"14\":\n              pushAlertPopUp('Problem retrieving location. Please try again later');\n              break;\n            default:\n              // usually error is \"location timeout\", but sometimes event GPS turn on will enter here\n              // pushAlertPopUp('Something went wrong, please enable GPS service');\n              break;\n          }\n          getUserCurrentLocationByHTML(onRetrievedPosition, onFailedGettingUserLocation, onNotAgreedSharing, pushAlertPopUp);\n        },\n      });\n      return ;\n    }catch(err){\n      // console.error('tng SDK not available');\n      getUserCurrentLocationByHTML(onRetrievedPosition, onFailedGettingUserLocation, onNotAgreedSharing, pushAlertPopUp);\n    }\n}\n  ","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getDistanceFromLatLonInKm } from \"@Util/map\";\nimport { getAllStoresInfo, getNearbyStores } from \"@API/api\";\nimport { useCartContext } from \"./CartContext\";\nimport { useAlertContext } from \"./AlertContext\";\nimport { useAddressContext } from \"./AddressContext\";\n\n// default values\nconst StoreContext = React.createContext({\n  selectedStore: undefined,\n  stores: [],\n  nearbyStores: [],\n  userEnabledLocation: false,\n  userLocation: undefined,\n  setSelectedStore: () => { },\n  setNearbyStores: () => { },\n  setUserEnabledLocation: () => { },\n  setUserLocation: () => { },\n  resetSelectedStore: () => { },\n});\n\nconst StoreProvider = ({ children }) => {\n  const { shoppingType } = useCartContext();\n  const { tngGetStorage, tngSetStorage } = useAlertContext();\n  const { selectedAddress, resetSelectedAddress } = useAddressContext();\n  const [selectedStore, setSelectedStoreState] = useState(undefined);\n  const [stores, setStores] = useState([]);\n  const [nearbyStores, setNearbyStores] = useState([]);\n  const [userEnabledLocation, setUserEnabledLocation] = useState(false);\n  const [userLocation, setUserLocation] = useState(undefined);\n  const [isSelectStoreModalOpened, setIsSelectStoreModalOpened] = React.useState(false);\n  const [firstRender, setFirstRender] = useState(true);\n\n  const setSelectedStore = (data) => {\n    setSelectedStoreState(data);\n    if (!!data) {\n      tngSetStorage('selectedStore', data);\n    } else {\n      tngSetStorage('selectedStore', undefined);\n    }\n  }\n  \n  const resetSelectedStore = (data) => {\n    setSelectedStoreState(data);\n    tngSetStorage('selectedStore', data);\n    resetSelectedAddress(data)\n  }\n\n  useEffect(() => {\n    // if user delete address and that address is selectedAddress\n    // in AddressContext selectedAddress will become undefined\n    if (!selectedAddress && !firstRender) {\n      setSelectedStore(undefined);\n      tngSetStorage('selectedStore', undefined);\n    } else {\n      setFirstRender(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedAddress])\n\n  // call graphql API to get all stores on first render\n  useEffect(() => {\n    tngGetStorage('selectedStore', (data) => {\n      setSelectedStoreState(data)\n    })\n    getAllStoresInfo().then((res) => {\n      if (Array.isArray(res)) {\n        setStores(res);\n        // tngGetStorage('selectedStore', (data) => {\n        // if(!!data){\n        // setSelectedStoreState(data)\n        // }\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // caluculate distance when shopping type and user location changed\n  useEffect(() => {\n    if (!userLocation) return;\n\n    setStores((allStores) => {\n      const storesWithDistance = getStoreBasedOnDistance(allStores);\n      return storesWithDistance;\n    });\n\n    // response may be different based on different shopping type\n    getNearbyStores(shoppingType, userLocation.lat, userLocation.lng).then(res => {\n      setNearbyStores(getStoreBasedOnDistance(res));\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shoppingType, userLocation]);\n\n  const getStoreBasedOnDistance = (stores, locationPassed) => {\n    // console.log('locationPassed into getStoreBasedOnDistance',locationPassed);\n    const storesWithDistance = stores.map((s) => {\n      if (!locationPassed) {\n        return {\n          ...s,\n          distance: getDistanceFromLatLonInKm(\n            userLocation.lat,\n            userLocation.lng,\n            s.latitude,\n            s.longitude\n          ).toFixed(2),\n        }\n      }\n      return {\n        ...s,\n        distance: getDistanceFromLatLonInKm(\n          locationPassed.lat,\n          locationPassed.lng,\n          s.latitude,\n          s.longitude\n        ).toFixed(2),\n      };\n    });\n\n    return storesWithDistance;\n  }\n\n  return (\n    <StoreContext.Provider\n      value={{\n        selectedStore,\n        stores,\n        nearbyStores,\n        userEnabledLocation,\n        userLocation,\n        setSelectedStore,\n        setNearbyStores,\n        setUserEnabledLocation,\n        setUserLocation,\n        getStoreBasedOnDistance,\n        isSelectStoreModalOpened,\n        setIsSelectStoreModalOpened,\n        resetSelectedStore\n      }}\n    >\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nconst useStoreContext = () => {\n  return React.useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React, { useState } from 'react';\n\nconst PageContext = React.createContext({\n  orders: {\n    pendingOrders: [],\n    historyOrders: [],\n    scrollPosition: undefined,\n  },\n  selectedTab: undefined,\n  setSelectedTab: () => {},\n});\n\nexport const Pages = {\n  orders: \"orders\",\n  cart: \"cart\",\n  home: \"home\",\n}\n\nconst PageProvider = ({ children }) => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [getAllOrders, setGetAllOrders] = useState(false);\n  const [landingProducts, setLandingProducts] = useState([]);\n  const [categoryMenu, setCategoryMenu] = useState([]);\n  const [keyHighlights, setKeyHighlights] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [reviewedOrders, setReviewedOrders] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const initialScrollPositionsObj = {}\n  Object.keys(Pages).forEach(key => {\n    initialScrollPositionsObj[key] = 0;\n  })\n  const [scrollPositions, setScrollPositions] = useState(initialScrollPositionsObj);\n\n  const saveOrders = (pendingOrders, historyOrders) => {\n    const obj = {\n      pendingOrders,\n      historyOrders\n    };\n    setOrders(obj);\n  }\n\n  // this will keep firing\n  const saveScrollPosition = (scrollPosition, page) => {\n    const temp = {...scrollPositions};\n    temp[page] = scrollPosition;\n    // console.log(`saving scroll position of ${page} page..`, temp);\n    setScrollPositions(temp);\n  }\n\n  const getScrollPosition = (page) => {\n    // console.log(`getting scroll position of ${page} page..`, scrollPositions[page]);\n    return scrollPositions[page];\n  }\n\n  return (<PageContext.Provider value={{\n    orders,\n    selectedTab,\n    setSelectedTab,\n    saveOrders,\n    saveScrollPosition,\n    getScrollPosition,\n    getAllOrders, \n    setGetAllOrders,\n    landingProducts,\n    setLandingProducts,\n    categoryMenu,\n    setCategoryMenu,\n    keyHighlights,\n    setKeyHighlights,\n    reviewedOrders,\n    setReviewedOrders,\n    query,\n    setQuery\n  }}>{children}</PageContext.Provider>)\n}\n\nconst usePageContext = () => {\n  return React.useContext(PageContext);\n}\n\nexport { PageProvider, usePageContext };","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport './Loader.scss'\n\nfunction Loader(){\n  // const classes = useStyles();\n  return <div className='loader-container'>\n    <CircularProgress size=\"5rem\" />\n  </div>;\n}\n\nexport { Loader };","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    display: \"fixed\",\n    // top: 0,\n    // bottom: 0,\n  },\n}));\n\nfunction OverlayLoader() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"primary\" />\n      </Backdrop>\n    </div>\n  );\n}\nexport { OverlayLoader };","export function useCurrency() {\n  const currency = \"RM\";\n  const decimalPoint = 2;\n\n  const formatCurrency = (value) => {\n    return value || value === 0 ? `${currency} ${value.toFixed(decimalPoint)}` : '';\n  };\n\n  return { formatCurrency };\n}\n","export const config = {\n  googleMapKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY+process.env.REACT_APP_GOOGLE_MAP_API_2_KEY, \n};\n","export const routes = {\n    root: '/',\n    home: '/home',\n    productListing: '/product-listing/:id',\n    productListingBanner: '/product-listing/:id/banner',\n    categoryListing: '/category-listing/:id',\n    categoryListingBanner: '/category-listing/:id/banner',\n    productDetails: '/product-details/:id',\n    singleStoreLocator: '/single-store-locator/:id',\n    cart: '/cart',\n    paymentMethod: '/payment-method',\n    orders: '/orders',\n    order: '/order/:id',\n    ongoingOrder: '/ongoing-order/:id',\n    banner: '/banner/:id',\n    search: '/search',\n    profile: '/profile',\n    login: '/login',\n    signup: '/signup',\n    favouriteAddresses: '/favourite-addresses',\n    helpCenter: '/help-center',\n    tnc: '/tnc',\n    privacy: '/privacy',\n    editAddress: '/edit-address/:id',\n    forgetPassword: '/forget-password',\n    storeLocator: '/store-locator',\n    notFound: '/notFound',\n    submitEmail:'/submit-email',\n    proceed:'/sign-in',\n};\n","export default __webpack_public_path__ + \"static/media/Store4Strip.08ae1d54.svg\";","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport pickUpSVG from '@Assets/svgs/Store4Strip.svg';\nimport './EmptyState.scss';\n\nconst EmptyState = ({ title, description }) => {\n  return <div className='empty_state-container'>\n    <div className='empty_state-flex_item'>\n      <img src={pickUpSVG} alt=\"\" className='empty_state-icon' />\n      <Typography variant=\"h6\" className='empty_state-title' gutterBottom>{title}</Typography>\n      <div className=\"empty_state-description-container\">\n      <Typography component=\"p\" gutterBottom  className=\"empty_state-description\">\n        {description}\n      </Typography>\n      </div>\n    </div>\n  </div>\n}\n\nexport { EmptyState };\n"],"sourceRoot":""}