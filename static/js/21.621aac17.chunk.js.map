{"version":3,"sources":["components/Common/Header/Header.jsx","assets/svgs/back-btn.svg","components/Common/BackButton/BackButton.jsx","hooks/useViewPortSize.js","components/Common/Modal/Modal.jsx","components/Common/PageHeader/PageHeader.jsx","assets/svgs/delivery.svg","assets/svgs/pickup.svg","components/Common/PageLayout/PageLayout.jsx","components/Common/Header/index.js","components/Common/Modal/index.js","components/Common/PageLayout/OverlayPageLayout.jsx","assets/svgs/BlueDotCirclePulsing.svg","assets/svgs/map-center-marker.svg","components/Common/Map/GoogleMap.jsx","components/Common/PageLayout/StickyHeaderPageLayout.jsx","components/Common/NavigationModal/NavigationModal.jsx","assets/svgs/SeatingArea.svg","Pages/SingleStoreLocator/SingleStoreLocator.jsx"],"names":["Header","leftSlot","centerSlot","rightSlot","id","className","color","position","elevation","disableGutters","BackButton","onBackClicked","goBack","useHistory","IconButton","edge","aria-label","onClick","src","BackButton_Icon","alt","useViewPortSize","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","resizeTimeoutRef","useRef","getWindowInnerHeight","clearTimeout","current","setTimeout","vpWidth","vpHeight","useLayoutEffect","addEventListener","removeEventListener","useStyles","makeStyles","theme","root","maxWidth","maxHeight","overflowY","breakpoints","up","top","down","closeButton","left","marginLeft","bottom","backgroundColor","palette","secondary","main","primary","Modal","onClose","selectedValue","open","title","children","noCloseBtn","props","classes","handleClose","event","reason","disableEscapeKeyDown","aria-labelledby","PaperProps","clsx","bold","fontWeight","typography","platformFontWeight","PageHeader","component","paddingTop","overflow","rootHome","paddingRight","paddingLeft","bottomNavigatorSpacer","container","PageLayout","containerFullHeigth","header","body","footer","PageName","usePageContext","saveScrollPosition","getScrollPosition","containerRef","useEffect","savedPos","scrollTo","listenToScroll","e","scrollTop","node","ref","background","zIndex","OverlayPageLayout","mapHolder","padding","map","borderRadius","boxShadow","transition","display","drawCenterIcon","content","margin","MapCenterMarker","backgroundSize","pointerEvents","mapOverlay","controlArea","marginTop","boxSizing","outline","fontFamily","querySection","alignItems","queryInput","flex","searchIconButton","resultList","borderBottomLeftRadius","borderBottomRightRadius","resultListItem","borderBottom","loadingIcon","GoogleMap","apiKey","overridePlaceId","search","undefined","initialCenterPosition","centerPosition","focusZoomLevel","markers","changeableMarkers","markerCoordinates","activeMarkerIndex","onMarkerClicked","onMarkerCoordinatesClicked","coordinate","markerInfoContent","markerIcon","showCurrentUserLocation","storeIcon","onMapEvents","onSearched","prediction","updateActiveMarkerIndex","triggerZoomChangedRef","infoWindowRef","noCurrLocationMarker","isEditingAddress","addressDetail","setAddressDetail","scriptHasLoaded","useAddressContext","pushAlertPopUp","useAlertContext","userEnabledLocation","useStoreContext","queryTimeoutRef","currentLocationUpdateIntervalRef","mapRef","geocoderRef","currentPositionMarkerRef","markerRef","markersRef","autoCompleteServiceRef","placeServiceRef","hasMapLoaded","setHasMapLoaded","query","onDisplaySuggestionResult","predictions","status","google","maps","places","PlacesServiceStatus","OK","console","error","err","warn","length","getPlacePredictions","input","componentRestrictions","country","setCenter","setZoom","googlemaps","setMarkers","Map","document","getElementById","center","lat","lng","disableDefaultUI","gestureHandling","zoom","clickableIcons","geocoder","Geocoder","addListenerOnce","card","controls","ControlPosition","TOP_CENTER","push","initMap","AutocompleteService","PlacesService","onGetPositionSuccess","pos","setPosition","markerImage","MarkerImage","BlueDotCirclePulsing","Point","marker","Marker","icon","getLocationByHTML","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getPositionOptions","updateCurrentUserLocationMarker","my","getLocation","success","res","parseFloat","fail","stores","infowindow","InfoWindow","infowindowContent","infoWindowWidth","clientWidth","setOptions","minWidth","setContent","m","idx","coorMarker","storeName","addListener","anchorPoint","theMap","i","find","s","getTitle","setVisible","setClickable","resetMarkers","placeId","getDetails","geo","geometry","location","viewport","fitBounds","getCenter","currentPosition","place","getPlaceDetailAndMarkOnMap","setInterval","clearInterval","setMap","trigger","googleMapsEvent","listenerSwitch","removeListener","displayName","rootWithPadding","stickyContainer","StickyHeaderPageLayout","body1","type","body2","itemTotal","style","paddingBottom","modalTitle","textAlign","navSelector","navName","fontSize","NavigationModal","selectedLocation","userLocation","justifyContent","assign","mapViewSection","chipLabel","right","textTransform","textOverflow","whiteSpace","disabledChipLabel","borderColor","grey","storeLabel","text","storeAddress","operationHourText","lineHeight","distanceText","storeListItemIcon","verticalAlign","seatingArea","seatingAreaText","markerAddress","SingleStoreLocator","useParams","history","isNavigationModalOpened","setIsOpenNavigationModalOpened","mapHeight","selectedStore","storeId","routes","storeLocator","Loader","storeOperationHour","storeOperatingHours","deliveryOperationHour","ecomOperatingHours","address","markerContent","Box","Typography","config","googleMapKey","Chip","disabled","label","variant","gutterBottom","pickUpSVG","deliverySVG"],"mappings":"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","file":"static/js/21.621aac17.chunk.js","sourcesContent":["import React from 'react';\n// Components\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport './Header.scss'\n\n\nconst Header = ({ leftSlot, centerSlot, rightSlot }) => {\n\n  return (\n    <AppBar id=\"appbar\" className='header-container' color=\"secondary\" position=\"fixed\" elevation={1}>\n      <Container>\n        <Toolbar className='header-toolbar' disableGutters>\n          <div className='header-left'>{leftSlot}</div>\n          <div className='header-center'>{centerSlot}</div>\n          <div className='header-right'>{rightSlot}</div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport { Header };\n","export default __webpack_public_path__ + \"static/media/back-btn.715fa344.svg\";","import React from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport './BackButton.scss'\nimport BackButton_Icon from \"@Assets/svgs/back-btn.svg\"\n\nconst BackButton = ({ \n  className,\n  onBackClicked,\n}) => {\n  const history = useHistory();\n  const goBack = history.goBack;\n  \n  return <>\n    {/* pass props className= 'backButton-withoutHeader' for backbutton without header */}\n    <IconButton className={className? className: 'backButton'} edge=\"start\" color=\"inherit\" aria-label=\"back\" onClick={!!onBackClicked ? onBackClicked : goBack}>\n    <img src={BackButton_Icon} alt=\"pic\"/>\n    </IconButton>\n  </>;\n}\n\nexport { BackButton };\n","import { useLayoutEffect, useState, useRef } from \"react\";\n\nconst useViewPortSize = () => {\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const resizeTimeoutRef = useRef();\n\n  const getWindowInnerHeight = () => {\n    clearTimeout(resizeTimeoutRef.current);\n    resizeTimeoutRef.current = setTimeout(() => {\n      const vpWidth = window.innerWidth;\n      const vpHeight = window.innerHeight;\n      setWidth(vpWidth);\n      setHeight(vpHeight);\n    }, 500);\n  }\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", getWindowInnerHeight);\n\n    return () => {\n      window.removeEventListener(\"resize\", getWindowInnerHeight);\n    }\n  }, [])\n\n  return [width, height] \n}\n\nexport default useViewPortSize;\n","import React from \"react\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 'calc(100vw - 10px)',\n    maxWidth: '320px',\n    maxHeight: '450px',\n    overflowY: 'auto',\n    [theme.breakpoints.up(\"sm\")]: {\n      maxHeight: 'calc(100% - 10rem)',\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      top: '-4rem'\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      top: '-1rem'\n    }\n  },\n  closeButton: {\n    position: 'fixed',\n    left: '50%',\n    marginLeft: '-1.75rem',\n    bottom: '3.25rem',\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main,\n    [theme.breakpoints.down(\"md\")]: {\n      bottom: '20px',\n    }\n  }\n}));\n\nconst Modal = ({ className, onClose = () => {}, selectedValue, open, title, children,  noCloseBtn = false, ...props }) => {\n  const classes = useStyles();\n  \n  const handleClose = (event, reason) => {\n    if(noCloseBtn){\n      if(reason === \"escapeKeyDown\" || reason === \"backdropClick\") return false;\n      // else will run, but nothing to run too :p\n    }else{\n      onClose(selectedValue, reason);\n    }\n  };\n\n  return <Dialog {...props} disableEscapeKeyDown={noCloseBtn} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} PaperProps={{ className: clsx(classes.root, className) }}>\n    {!!title && <DialogTitle id=\"simple-dialog-title\">{title}</DialogTitle>}\n    {children}\n    {\n      !noCloseBtn &&\n      <Fab className={classes.closeButton} onClick={handleClose} aria-label=\"close\">\n        <CloseOutlinedIcon />\n      </Fab>\n    }\n  </Dialog>\n};\n\nexport { Modal };\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport './PageHeader.scss'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  bold:{\n    fontWeight: theme.typography.platformFontWeight,\n  },\n}));\n\nconst PageHeader = ({ children }) => {\n  const classes = useStyles();\n\n  return <Typography className={clsx('page_header-container', classes.bold)} component=\"h1\">\n    {children}\n  </Typography>;\n}\n\nexport { PageHeader };\n","export default __webpack_public_path__ + \"static/media/delivery.873969ab.svg\";","export default __webpack_public_path__ + \"static/media/pickup.d42a4379.svg\";","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport \"./PageLayout.scss\"\nimport { usePageContext } from \"@Context/PageContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: '4.3rem',\n    overflow:'auto',\n    backgroundColor: 'white',\n    height: '100%',\n    // \"&::after\":{\n    //   content: '\" \"',\n    //   display: 'block',\n    //   height: 'calc(1.25rem + 56px + 28px)',\n    //   width: '100%'\n    // }\n  },\n  rootHome: {\n    paddingTop: '4.3rem',\n    paddingRight: '0',\n    paddingLeft: '0',\n    overflow:'auto',\n    backgroundColor: 'white',\n    height: '100%',\n  },\n  bottomNavigatorSpacer: {\n    // Bottom navigation padding-bottom + Bottom navigation height + fab half height (56px / 2)\n    height: 'calc(1.25rem + 56px + 28px)'\n  },\n  container: {\n    height: '100%',\n  }\n}));\n\nconst PageLayout = ({ className, containerFullHeigth, header, body, footer, PageName }) => {\n  const classes = useStyles();\n  const { saveScrollPosition, getScrollPosition } = usePageContext();\n  const containerRef = useRef(null);\n\n  // if(containerRef.current){\n  //   console.log(containerRef.current);\n  //   console.log('containerRef available, scrollHeight',containerRef.current.scrollHeight)\n  // }else{\n  //   console.log('containerRef not available')\n  // }\n  useEffect(()=>{\n    if(PageName){\n      const savedPos = getScrollPosition(PageName);\n      // const { scrollTop, scrollHeight } = containerRef.current;\n      // console.log('scrollTop, scrollHeight before scrolling:',scrollTop,scrollHeight);\n      // console.log('scroll to',savedPos)\n      containerRef.current.scrollTo(0, savedPos);\n  \n      const listenToScroll = (e) => {\n        const { scrollTop } = containerRef.current;\n        // console.log('when scrolling scrollHeight',containerRef.current.scrollHeight)\n        // console.log(containerRef.current);\n        saveScrollPosition(scrollTop, PageName);\n      }\n      setTimeout(() => {\n        // console.log('add onscroll listener')\n        if(containerRef.current)\n        containerRef.current.addEventListener('scroll', listenToScroll);\n      }, 1);\n      const node = containerRef.current;\n      return () => {\n        node.removeEventListener('scroll', listenToScroll)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  return <Container className={PageName === \"home\" ? clsx(classes.rootHome, [className]) : clsx(classes.root, [className])} ref={containerRef} id='page-layout-container'>\n    {header}\n    <div className={clsx({[classes.container]:containerFullHeigth})}>\n      {body}\n    </div>\n    <div className={classes.footer}>\n    {\n      !!footer && <>\n        <div className={classes.bottomNavigatorSpacer} />\n        <div/>\n        {footer}\n      </>\n    }\n    </div>\n  </Container>;\n}\n\nexport { PageLayout };\n","export * from './Header';\n","export * from \"./Modal\";\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: '4rem',\n    maxWidth: 'unset',\n    paddingLeft: 6,\n    paddingRight: 6,\n    position: 'fixed',\n    background: 'white',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: 2000\n  },\n}));\n\nconst OverlayPageLayout = ({ header, body, footer }) => {\n  const classes = useStyles();\n  return <Container className={classes.root}>\n    {header}\n    <div>\n      {body}\n    </div>\n  </Container>;\n}\n\nexport { OverlayPageLayout };\n","export default __webpack_public_path__ + \"static/media/BlueDotCirclePulsing.adddd586.svg\";","export default __webpack_public_path__ + \"static/media/map-center-marker.f7143404.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\n// import useScript from \"@Hook/useScript\";\nimport BlueDotCirclePulsing from \"src/assets/svgs/BlueDotCirclePulsing.svg\";\nimport MapCenterMarker from \"src/assets/svgs/map-center-marker.svg\";\nimport { useAddressContext } from \"@Context/AddressContext\";\nimport { useAlertContext } from '@Context/AlertContext';\nimport { useStoreContext } from \"@Context/StoreContext\";\nimport { getPositionOptions } from '@Util/map';\n\nconst useStyles = makeStyles(() => ({\n  mapHolder: {\n    padding: \"6px\",\n  },\n  map: {\n    position: \"relative\",\n    height: (props) => `calc(${props.height+43}px - 1rem)`,\n    width: \"100%\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 0 4px 1px rgba(22, 22, 22, 0.1)\",\n    transition: \"height 0.25s ease\",\n    \"& .gmnoprint\": {\n      display: \"none\",\n    },\n    \"&::after\": {\n      width: 22,\n      height: 40,\n      display: (props) => (props.drawCenterIcon ? \"block\" : \"none\"),\n      content: '\" \"',\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      margin: \"-40px 0 0 -11px\",\n      background: `url('${MapCenterMarker}')`,\n      backgroundSize: \"22px 40px\",\n      pointerEvents: \"none\",\n    },\n  },\n  mapOverlay: {\n    position: \"fixed\",\n  },\n  controlArea: {\n    width: \"90%\",\n    marginTop: \"14px\",\n    borderRadius: \"12px\",\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    boxShadow: \"0 0 12px 4px rgba(22, 22, 22, 0.2)\",\n    backgroundColor: \"#eee\",\n    fontFamily: \"Roboto\",\n  },\n  querySection: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  queryInput: {\n    flex: 1,\n    paddingRight: 12,\n  },\n  searchIconButton: {\n    padding: 10,\n  },\n  resultList: {\n    backgroundColor: \"#eee\",\n    borderBottomLeftRadius: 12,\n    borderBottomRightRadius: 12,\n  },\n  resultListItem: {\n    borderBottom: \"1px solid lightgrey\",\n    \"&:last-child\": {\n      borderBottom: 0,\n    },\n  },\n  loadingIcon: {\n    width: \"24px !important\",\n    height: \"24px !important\",\n  },\n  // centerMarker: {\n  //   position: \"absolute\",\n  //   /*url of the marker*/\n  //   background: \"url(http://maps.gstatic.com/mapfiles/markers2/marker.png) no-repeat\",\n  //   /*center the marker*/\n  //   // backgroundOrigin: \"center\",\n  //   // top:\"50%\",\n  //   // left:\"50%\",\n  //   // zIndex: 0,\n  //   // /*fix offset when needed*/\n  //   // marginLeft: -10,\n  //   // marginTop: 0,\n  //   // /*size of the image*/\n  //   // height: 34,\n  //   // width: 20,\n  //   // cursor: \"pointer\"\n  //   top: 0,\n  //   bottom: 0,\n  //   left: 0,\n  //   right: 0,\n  //   margin: \"auto\",\n  // }\n}));\n\nconst GoogleMap = ({\n  apiKey,\n  height,\n  overridePlaceId,\n  search = undefined,\n  initialCenterPosition = undefined,\n  centerPosition = undefined,\n  focusZoomLevel = 12,\n  markers = [], // aka stores\n  changeableMarkers: markerCoordinates = [],\n  activeMarkerIndex = undefined,\n  onMarkerClicked: onMarkerCoordinatesClicked = (coordinate) => {},\n  markerInfoContent = null,\n  markerIcon = null,\n  showCurrentUserLocation = false,\n  storeIcon = undefined,\n  drawCenterIcon = false,\n  onMapEvents = [], //e.g. [['dragend', callback]]\n  onSearched = (prediction) => {},\n  updateActiveMarkerIndex = null,\n  triggerZoomChangedRef,\n  infoWindowRef,\n  noCurrLocationMarker = false,\n  isEditingAddress = false,\n  addressDetail = {},\n  setAddressDetail = () => {},\n}) => {\n  // console.log('Google Map render');\n  const { scriptHasLoaded } = useAddressContext();\n  const { pushAlertPopUp } = useAlertContext();\n  const { userEnabledLocation } = useStoreContext();\n\n  const classes = useStyles({\n    height,\n    drawCenterIcon,\n  });\n\n  const queryTimeoutRef = useRef(null);\n  const currentLocationUpdateIntervalRef = useRef(null);\n  const mapRef = useRef(null);\n  const geocoderRef = useRef(null);\n  const currentPositionMarkerRef = useRef(null);\n  const markerRef = useRef(null);\n  const markersRef = useRef([]);\n  // const centerMarkerRef = useRef(null);\n  const autoCompleteServiceRef = useRef(null);\n  const placeServiceRef = useRef(null);\n\n  const [hasMapLoaded, setHasMapLoaded] = useState(false);\n  // const [hasInitMap, setHasInitMap] = useState(false);\n\n  // call Google API to get predictions\n  useEffect(() => {\n    const onDisplaySuggestionResult = (predictions, status) => {\n      // console.log('onDisplaySuggestionResult')\n      try {\n        if (\n          status !== window.google.maps.places.PlacesServiceStatus.OK ||\n          !predictions\n        ) {\n          console.error(status);\n          return;\n        }\n\n        onSearched(predictions);\n      } catch (err) {\n        console.warn(err);\n      }\n    };\n\n    const getPredictionByQueryInput = (query) => {\n      // console.log('query in getPredictionByQueryInput',query);\n      if (queryTimeoutRef && queryTimeoutRef.current) {\n        clearTimeout(queryTimeoutRef.current);\n      }\n\n      queryTimeoutRef.current = setTimeout(() => {\n        autoCompleteServiceRef.current.getPlacePredictions(\n          {\n            input: query,\n            componentRestrictions: { country: \"my\" },\n          },\n          onDisplaySuggestionResult\n        );\n      }, 1000);\n    };\n    if (!!search && search.length > 0) getPredictionByQueryInput(search);\n    // console.log('search',search);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]); // if onSearched is one of the dependencies of useEffect, the map will render infinitely\n\n  // set map's center and zoom level when center position or zoom level changed\n  useEffect(() => {\n    // console.log(`set map's center and zoom level when center position or zoom level changed`)\n    if (!centerPosition || !hasMapLoaded) return;\n    \n    mapRef.current?.setCenter(centerPosition);\n    mapRef.current?.setZoom(focusZoomLevel);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [centerPosition, focusZoomLevel]);\n\n  // set the current location of user when first load\n  // if user editing address, dont set\n  useEffect(() => {\n    // console.log('if user editing address, dont set. centerPosition',centerPosition, 'isEditingAddress', isEditingAddress)\n    if (!centerPosition || !hasMapLoaded) return;\n    if(isEditingAddress) return;\n    // console.log('setting center for map. mapRef.current',mapRef.current)\n    mapRef.current?.setCenter(centerPosition);\n    mapRef.current?.setZoom(focusZoomLevel);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasMapLoaded, centerPosition, focusZoomLevel]);\n\n  useEffect(() => {\n    const initMap = () => {\n      /* Init Google Map */\n      if(!mapRef.current){\n        const googlemaps = window.google.maps;\n        const map = new googlemaps.Map(document.getElementById(\"map\"), {\n          // West Malaysia center by default\n          center: initialCenterPosition || { lat: 3.1390, lng: 101.6869 },\n          disableDefaultUI: true,\n          gestureHandling: \"greedy\",\n          zoom: initialCenterPosition ? focusZoomLevel : 18,\n          clickableIcons: false\n        });\n        mapRef.current = map;\n  \n        // Init Geocoder\n        const geocoder = new window.google.maps.Geocoder();\n        geocoderRef.current = geocoder;\n  \n        /* Google Map Events */\n        googlemaps.event.addListenerOnce(map, \"tilesloaded\", function () {\n          setHasMapLoaded(true);\n        });\n  \n        /* Embedding our component into google map view */\n        const card = document.getElementById(\"search-control\");\n        map.controls[googlemaps.ControlPosition.TOP_CENTER].push(card);\n  \n        setMarkers(map, googlemaps, markers);\n      }else{\n        // not first render but need this block of code to set markers\n        const map = mapRef.current; \n        const googlemaps = window.google.maps;\n        setMarkers(map, googlemaps, markers);\n      }\n    };\n\n    if (scriptHasLoaded) {\n      initMap();\n\n      // Init Services\n      autoCompleteServiceRef.current =\n        new window.google.maps.places.AutocompleteService();\n      placeServiceRef.current = new window.google.maps.places.PlacesService(\n        document.getElementById(\"placeAttrId\")\n      );\n    }else{\n      // console.log('script has not loaded');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // dont need, these values will not be changed or their changes do not need to trigger initialisation of map\n    scriptHasLoaded, markers\n  ]);\n\n  const onGetPositionSuccess = function (pos, map) {\n    if (!currentPositionMarkerRef.current) {\n      // console.log('first time enter here, currentPositionMarkerRef is null')\n      if(noCurrLocationMarker) return;\n      var markerImage = new window.google.maps.MarkerImage(\n        BlueDotCirclePulsing,\n        null,\n        // The origin for my image is 0,0.\n        new window.google.maps.Point(0, 0),\n        // The center of the image is 50,50 (my image is a circle with 100,100)\n        new window.google.maps.Point(30, 30)\n      );\n\n      var marker = new window.google.maps.Marker({\n        position: { lat: pos.lat, lng: pos.lng },\n        map: map,\n        title: \"Current Location\",\n        icon: markerImage,\n        zIndex: 999,\n      });\n\n      currentPositionMarkerRef.current = marker;\n    } else {\n      // console.log('currentPositionMarkerRef exists')\n      currentPositionMarkerRef.current.setPosition({\n        lat: pos.lat,\n        lng: pos.lng,\n      });\n    }\n\n    // map.setCenter(pos);\n  }\n\n  const getLocationByHTML = (map) => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        function (position) {\n          const pos = {\n            lat: +position.coords.latitude,\n            lng: +position.coords.longitude,\n          };\n          onGetPositionSuccess(pos, map);\n        },\n        function () {\n          pushAlertPopUp(\"Please enable GPS service\");\n        },\n        getPositionOptions\n      );\n    } else {\n      pushAlertPopUp(`Problem retrieving location. Please try again later`);\n    }\n  }\n\n  // this will be called consistently to update user's location\n  const updateCurrentUserLocationMarker = () => {\n    if (!window.google?.maps) return;\n\n    let map = mapRef.current;\n\n    // Check if this browser supports HTML5 geolocation\n    try{\n      // eslint-disable-next-line no-undef\n      my.getLocation({\n        success: (res) => {\n          const pos = {\n            lat: parseFloat(res.latitude),\n            lng: parseFloat(res.longitude)\n          };\n          onGetPositionSuccess(pos, map);\n        },\n        fail(res) {\n          switch (res.error) {\n            case \"11\":\n              pushAlertPopUp(`Problem retrieving location. Please try again later`);\n              break;\n            case \"12\":\n              pushAlertPopUp(`Problem connecting network, please try again`);\n              break;\n            case \"13\":\n              pushAlertPopUp(`Problem retrieving location. Please try again later`);\n              break;\n            case \"14\":\n              pushAlertPopUp(`Problem retrieving location. Please try again later`);\n              break;\n            default:\n              break;\n          }\n          getLocationByHTML(map);\n        },\n      });\n      return ;\n    }catch(err){\n      // console.log('tng SDK not available');\n      getLocationByHTML(map);\n    }\n  };\n\n  // used in InitMap\n  const setMarkers = (map, googlemaps, stores) => {\n    /* Make info window for current search location */\n    const infowindow = new googlemaps.InfoWindow();\n    const infowindowContent = document.getElementById(\"infowindow-content\");\n    let infoWindowWidth = document.getElementById(\"map\").clientWidth - 50;\n    if (infoWindowWidth > 600) infoWindowWidth = 600;\n\n    infowindow.setOptions({\n      minWidth: infoWindowWidth,\n    });\n    infowindow.setContent(infowindowContent);\n    if(infoWindowRef) infoWindowRef.current = infowindow;\n\n    // console.log('in set Markers, stores', stores);\n    stores.map((m, idx) => {\n      let coorMarker = new googlemaps.Marker({\n        position: {\n          lat: parseFloat(m.latitude),\n          lng: parseFloat(m.longitude),\n        },\n        map: map,\n        title: m.storeName,\n        icon: markerIcon,\n      });\n      window.google.maps.event.addListener(coorMarker, \"click\", function () {\n        // console.log('a marker clicked, whether trigger programmatically or by user gesture');\n        infowindow.open(map, coorMarker);\n        onMarkerCoordinatesClicked(m, idx);\n      });\n\n      markersRef.current.push(coorMarker);\n      return null;\n    });\n\n    const marker = new googlemaps.Marker({\n      map,\n      anchorPoint: new googlemaps.Point(0, -29),\n    });\n    markerRef.current = marker;\n  }\n  \n  // for filter in ViewMap\n  const resetMarkers = (theMap, googlemaps, stores) => {\n    const markers = markersRef.current;\n    // console.log('reset Markers!', theMap);\n\n    for (let i = 0; i < markers.length; i++) {\n      if(stores.find(s => s.storeName === markers[i].getTitle())){\n        markers[i].setVisible(true);\n        markers[i].setClickable(true);\n      }else{\n        markers[i].setVisible(false);\n        markers[i].setClickable(false);\n      }\n    }\n  }\n\n  // reset markers if marker coordinates changed\n  useEffect(()=>{\n    if(markerCoordinates.length !== 0 && scriptHasLoaded){\n      const map = mapRef.current; \n      const googlemaps = window.google.maps;\n      resetMarkers(map, googlemaps, markerCoordinates);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[markerCoordinates, scriptHasLoaded])\n\n  // only used in OverlayAddressSelector\n  // get placeId from autocomplete then use placeService to get details then mark it on map\n  useEffect(() => {\n    const getPlaceDetailAndMarkOnMap = (placeId) => {\n      // console.log('getPlaceDetailAndMarkOnMap')\n\n      const marker = markerRef.current;\n      marker.setVisible(false);\n\n      placeServiceRef.current.getDetails(\n        {\n          placeId,\n        },\n        (res, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            // console.log('res of getDetails', res);\n            const geo = res.geometry,\n              map = mapRef.current;\n\n            if (!geo || !geo.location) {\n              pushAlertPopUp(`Problem retrieving location. Please try again later`);\n              return;\n            }\n\n            // If this place has a viewport definition, set it on map.\n            triggerZoomChangedRef.current = false;\n            if (geo.viewport) {\n              mapRef.current.fitBounds(geo.viewport);\n              map.setCenter(geo.viewport.getCenter());\n            } else {\n              // console.log('set center and set zoom');\n              map.setCenter(geo.location);\n              // map.setZoom(10);\n            }\n\n            marker.setPosition(geo.location);\n            marker.setVisible(!drawCenterIcon);\n            // else {\n            //   if (!!centerMarkerRef.current) {\n            //     centerMarkerRef.current.setPosition(geo.location);\n            //     centerMarkerRef.current.setVisible(true);\n            //   }\n            // }\n            // console.log('setSelectedPlace to response of PlacesService.getDetails')\n            const currentPosition = geo.location;\n            setAddressDetail({\n              ...addressDetail,\n              place: res,\n              latitude: currentPosition.lat(),\n              longitude: currentPosition.lng(),\n            });\n          } else {\n            pushAlertPopUp(\"Please enable GPS service\");\n          }\n        }\n      );\n    };\n    if (!hasMapLoaded || !overridePlaceId) return;\n    getPlaceDetailAndMarkOnMap(overridePlaceId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [drawCenterIcon, hasMapLoaded, overridePlaceId]);\n\n  // update user location consistently if showCurrentUserLocation === true && user enabled location service\n  useEffect(() => {\n    if (!hasMapLoaded || !mapRef.current || !showCurrentUserLocation || !userEnabledLocation) return;\n\n    updateCurrentUserLocationMarker();\n    currentLocationUpdateIntervalRef.current = setInterval(\n      updateCurrentUserLocationMarker,\n      2000\n    );\n\n    return () => {\n      clearInterval(currentLocationUpdateIntervalRef.current);\n      currentPositionMarkerRef.current?.setMap(null);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasMapLoaded, showCurrentUserLocation, userEnabledLocation]);\n\n  // inform user if api key is null\n  useEffect(() => {\n    if (!apiKey) {\n      pushAlertPopUp(\"Google Service not available, please contact app developer\");\n    }\n  }, [apiKey, pushAlertPopUp]);\n\n  // let GMap click the marker when the active marker index changed\n  useEffect(() => {\n    if (!hasMapLoaded || activeMarkerIndex === undefined) return;\n    // console.log('active marker index changed to', activeMarkerIndex);\n    // console.log('active marker changed to', markersRef.current[activeMarkerIndex]);\n    window.google.maps.event.trigger(\n      markersRef.current[activeMarkerIndex],\n      \"click\"\n    );\n  }, [hasMapLoaded, activeMarkerIndex, updateActiveMarkerIndex]);\n\n  // Register custom events\n  useEffect(() => {\n    if (!hasMapLoaded || !geocoderRef.current) return;\n\n    const googleMapsEvent = window.google.maps.event;\n\n    onMapEvents.map((e) => {\n      const callOnce = !!e[2] && e[2] === \"once\";\n      let listenerSwitch = \"addListener\";\n\n      if (callOnce) listenerSwitch = \"addListenerOnce\";\n\n      googleMapsEvent[listenerSwitch](mapRef.current, e[0], () => {\n        e[1](mapRef.current, geocoderRef.current);\n      });\n      return null;\n    });\n\n    return () => {\n      /* Remove custom events */\n      onMapEvents.map((e) => {\n        googleMapsEvent.removeListener(mapRef.current, e[0], () => {\n          e[1](mapRef.current, geocoderRef.current);\n        });\n        return null;\n      });\n    };\n  }, [hasMapLoaded, onMapEvents]);\n\n  // useEffect(() => {\n  //   if (!hasMapLoaded)\n  //     return;\n\n  //   const map = mapRef.current;\n\n  //   if (drawCenterIcon) {\n  //     const centerMarker = new window.google.maps.Marker({\n  //       position: { lat: map.center.lat(), lng: map.center.lng() },\n  //       map,\n  //     });\n  //     centerMarker.setVisible(true);\n\n  //     centerMarkerRef.current = centerMarker;\n  //   }\n  // }, [mapRef.current, hasMapLoaded, drawCenterIcon])\n\n  return (\n    <div>\n      <div className={classes.mapHolder}>\n        <div className={classes.mapOverlay}>\n          <div id=\"infowindow-content\">{markerInfoContent}</div>\n        </div>\n        <div id=\"map\" className={classes.map} />\n        <div id=\"placeAttrId\" />\n      </div>\n    </div>\n  );\n};\n\nGoogleMap.displayName = \"Google Map Component\";\nGoogleMap.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n};\n\nexport { GoogleMap };\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport \"./PageLayout.scss\"\n// Components\nimport AppBar from '@material-ui/core/AppBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: '4.5rem',\n    overflow:'auto',\n    backgroundColor: 'white',\n    height: '100%',\n    paddingLeft: '0',\n    paddingRight: '0',\n  },\n  rootWithPadding: {\n    paddingTop: '4.5rem',\n    overflow:'auto',\n    backgroundColor: 'white',\n    height: '100%',\n  },\n  bottomNavigatorSpacer: {\n    // Bottom navigation padding-bottom + Bottom navigation height + fab half height (56px / 2)\n    height: 'calc(1.25rem + 56px + 28px)'\n  },\n  container: {\n    height: '100%',\n  },\n  stickyContainer: {\n    position: \"fixed\", \n    top: \"3.5rem\", \n    // backgroundColor: \"aquamarine\", \n    height: \"30%\", \n    width: \"93%\", \n    zIndex: \"1\",\n    // [theme.breakpoints.up(\"lg\")]: {\n    //   width: \"75%\", \n    // },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"92%\", \n    },\n  }\n}));\n\nconst StickyHeaderPageLayout = ({ className, containerFullHeigth, header, body1, type=null, itemTotal=null, body2, footer }) => {\n  const classes = useStyles();\n  return (\n    <>\n    <Container className={clsx(type ? classes.rootWithPadding : classes.root, [className])} id='sticky-container'>\n        {header}\n        <div>\n          <AppBar elevation={0} id=\"appbar\" color=\"secondary\" position=\"fixed\" style={{top: \"3.5rem\", zIndex: \"1\"}}>\n            <Container style={{paddingTop: \"1rem\", paddingBottom: type ? \"0rem\" : null}}>\n                  {body1}\n              </Container>\n            </AppBar>\n        </div>    \n        <div style={{paddingTop: type ? \"2.5rem\" : \"8.5rem\"}}>{body2}</div>\n        <div className={classes.footer}>\n        {\n        !!footer && <>\n            <div className={classes.bottomNavigatorSpacer} />\n            {footer}\n        </>\n        }\n        </div>\n    </Container>\n  </>\n  )\n}\n\nexport { StickyHeaderPageLayout };\n","import React from \"react\";\nimport { Modal } from \"@Common/Modal\";\nimport { makeStyles, Box, Paper } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { useStoreContext } from \"@Context/StoreContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2rem 1rem\",\n    maxWidth: \"90%\"\n  },\n  modalTitle: {\n    textAlign: \"center\"\n  },\n  navSelector: {\n    flex: \"0 0 30%\",\n    textAlign: \"center\",\n    padding: \"18px 12px\",\n  },\n  navName: {\n    fontSize: \"1rem\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"0.7rem\",\n    }\n  }\n}));\n\nconst NavigationModal = ({ title, selectedLocation, ...props }) => {\n\n  const classes = useStyles();\n  const { userLocation } = useStoreContext();\n  // console.log(userLocation);\n  // console.log(selectedLocation);\n  // comgooglemaps://?saddr=&daddr=\\(lat),\\(lon)&directionsmode=driving\n  // waze://?ll=\\(lat),\\(lon)&navigate=yes\n  // waze://?ll=101.23,34.00&navigate=yes\n  const onWazeClicked = (event) => {\n    window.location.assign(`https://www.waze.com/ul?ll=${selectedLocation.latitude}%2C${selectedLocation.longitude}&navigate=yes&zoom=17`);\n  }\n  const onGoogleMapClicked = (event) => {\n    if(userLocation){\n      window.location.assign(`https://www.google.com/maps/dir/?api=1&origin=${userLocation.lat}%2C${userLocation.lng}&destination=${selectedLocation.latitude}%2C${selectedLocation.longitude}&travelmode=driving`);\n    }else{\n      window.location.assign(`https://www.google.com/maps/dir/?api=1&destination=${selectedLocation.latitude}%2C${selectedLocation.longitude}&travelmode=driving`);\n    }\n  }\n\n  return <Modal\n    {...props}\n    className={classes.root}\n    title={\n      <div className={classes.modalTitle}>\n        <Typography color=\"primary\">\n          {title}\n        </Typography>\n      </div>}\n  >\n    <Box display=\"flex\" justifyContent=\"space-evenly\">\n      <Paper className={classes.navSelector} onClick={onWazeClicked}>\n        <img src=\"https://www.waze.com/webcms/static/compiled/eab8d17c745136dfb5b5c40fb8b2564a.svg\" height={32} alt={'Waze'}/>\n        <Typography className={classes.navName} color=\"textPrimary\">Waze</Typography>\n      </Paper>\n      <Paper className={classes.navSelector} onClick={onGoogleMapClicked}>\n        <img src=\"https://lh3.googleusercontent.com/L37ZRAGZYmp35EP7HcddnvG5XOrjAqfSOZYbHyl_6nuPdHvrv7BAsKx_JxUp4D6PAkE=w133\" height={32} alt={'Google Maps'}/>\n        <Typography className={classes.navName} color=\"textPrimary\">Google Maps</Typography>\n      </Paper>\n    </Box>\n  </Modal>\n}\n\nexport { NavigationModal };","export default __webpack_public_path__ + \"static/media/SeatingArea.f69314c7.svg\";","import React, { useState } from \"react\";\nimport { GoogleMap } from \"@Common/Map/GoogleMap\";\nimport { Box, Chip, makeStyles, Typography } from \"@material-ui/core\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport { NavigationModal } from \"@Common/NavigationModal/NavigationModal\";\nimport useViewPortSize from \"@Hook/useViewPortSize\";\nimport { config } from \"src/constants/config\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { PageLayout } from \"@Common/PageLayout\";\nimport { Header } from \"@Common/Header\";\nimport { PageHeader } from '@Common/PageHeader/PageHeader';\nimport { BackButton } from '@Common/BackButton/BackButton';\nimport { useStoreContext } from \"@Context/StoreContext\";\nimport pickUpSVG from '@Assets/svgs/pickup.svg';\nimport deliverySVG from '@Assets/svgs/delivery.svg';\nimport seatingArea from '@Assets/svgs/SeatingArea.svg'\nimport { routes } from \"src/constants/routes.constant\";\nimport { Loader } from \"@Common/Loader\";\n\nconst outerMapHeight = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflowY: \"hidden\",\n    paddingTop: 16\n  },\n  mapViewSection: {\n    position: \"relative\",\n  },\n  chipLabel: {\n    position: \"absolute\",\n    background: \"white !important\",\n    bottom: 20,\n    right: 20,\n    width: 120,\n    textTransform: \"uppercase\",\n    minWidth: 0,\n    fontSize: \"0.6rem\",\n    \"& > span\": {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  },\n  disabledChipLabel: {\n    borderColor: grey[800],\n    color: grey[600]\n  },\n  storeLabel: {\n    fontSize: \"0.8rem\",\n    fontWeight: theme.typography.platformFontWeight,\n    paddingBottom: 6,\n    color: theme.palette.text.secondary\n  },\n  storeAddress: {\n    fontSize: \"0.8rem\",\n    paddingBottom: 6,\n    color: theme.palette.text.secondary\n  },\n  operationHourText: {\n    fontSize: '0.8rem',\n    lineHeight: \"1.4rem\",\n    color: theme.palette.text.secondary\n  },\n  distanceText: {\n    fontSize: \"0.8rem\",\n    fontWeight: theme.typography.platformFontWeight,\n  },\n  \n  storeListItemIcon: {\n    width: 18,\n    height: 18,\n    paddingRight: 8,\n    verticalAlign: \"top\"\n  },\n  seatingArea: {\n    flex: \"0 0 75px\",\n    paddingBottom: 2,\n    textAlign: \"center\"\n  },\n  seatingAreaText: {\n    fontSize: \"0.8rem\"\n  },\n  markerAddress: {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  }\n}));\n\nconst SingleStoreLocator = () => {\n\n  let { id } = useParams();\n  const history = useHistory();\n\n  const { stores } = useStoreContext();\n  const [isNavigationModalOpened, setIsOpenNavigationModalOpened] = useState(false);\n  const [, vpHeight] = useViewPortSize();\n\n  const mapHeight = vpHeight - outerMapHeight;\n  const classes = useStyles({\n    mapHeight\n  });\n\n  const openNavigationModal = () => {\n    setIsOpenNavigationModalOpened(true);\n  }\n\n  const selectedStore = stores.find(s => s.storeId === id);\n  // if user go to GMap external page then back, no store selected\n  if(!selectedStore){\n    history.push(routes.storeLocator);\n    return <Loader/>;\n  }\n  let { storeName, storeOperatingHours: storeOperationHour, ecomOperatingHours: deliveryOperationHour, address } = selectedStore;\n\n  const markerContent = (\n    <Box display=\"flex\" alignItems=\"center\">\n      <div style={{flex: \"0 0 40px\", textAlign: \"center\"}}>\n        <img width={30} height={30} src='https://www.familymart.com.my/img/marker2.png' alt={'FamilyMart Marker'}/>\n      </div>\n      <div className={classes.markerAddress} style={{flex: \"1 1 auto\"}}>\n        <div><Typography className={classes.markerAddress} component=\"h5\">{storeName}</Typography></div>\n      </div>\n    </Box>\n  );\n  return (\n    <PageLayout\n      header={\n      <Header\n        leftSlot={<BackButton />}\n        centerSlot={<PageHeader>Store Locator</PageHeader>}\n      />}\n      body={\n        <div className={classes.root}>\n          <div className={classes.mapViewSection}>\n            <GoogleMap \n              apiKey={config.googleMapKey}\n              height={mapHeight} \n              initialCenterPosition={{ lat: parseFloat(selectedStore.latitude), lng: parseFloat(selectedStore.longitude) }} \n              centerPosition={{ \n                lat: parseFloat(selectedStore.latitude), \n                lng: parseFloat(selectedStore.longitude) }} \n              focusZoomLevel={15}\n              markers={[{ \n                latitude: parseFloat(selectedStore.latitude), \n                longitude: parseFloat(selectedStore.longitude),\n                storeName: selectedStore.storeName\n              }]}\n              markerIcon={'https://www.familymart.com.my/img/marker2.png'}\n              markerInfoContent={markerContent}\n              />\n            <Chip\n              className={classes.chipLabel}\n              classes={{ disabled: classes.disabledChipLabel }}\n              label={\"Take Me There\"}\n              variant={\"outlined\"}\n              onClick={openNavigationModal}\n              color=\"primary\"\n            />\n          </div>\n          <br />\n          <Box display=\"flex\" alignItems=\"flex-end\" justifyContent=\"space-between\">\n            <div style={{paddingRight: 12}}>\n              <Typography className={classes.storeLabel} gutterBottom variant=\"h2\">{storeName}</Typography>\n              <Typography className={classes.storeAddress} gutterBottom variant=\"h2\">{address}</Typography>\n              <div>\n                <Typography className={classes.operationHourText} variant=\"body1\">\n                <img src={pickUpSVG} alt='Pickup}' className={classes.storeListItemIcon} />  {storeOperationHour}\n                </Typography>\n              </div>\n              <div>\n                <Typography className={classes.operationHourText} variant=\"body1\">\n                  <img src={deliverySVG} alt='delivery' className={classes.storeListItemIcon} />  {deliveryOperationHour}\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.seatingArea}>\n              {/* <WeekendTwoToneIcon /> */}\n              <img src={seatingArea} alt='Seating Area' className={classes.storeListItemIcon} />\n              <Typography color=\"primary\" component=\"div\" className={classes.seatingAreaText}>Seating Area</Typography>\n            </div>\n          </Box>\n          <NavigationModal\n            title={storeName}\n            open={isNavigationModalOpened}\n            onClose={() => setIsOpenNavigationModalOpened(false)}\n            selectedLocation={selectedStore}\n          />\n        </div>\n      }\n      footer={(null)}\n    />\n  )\n}\n\nexport { SingleStoreLocator };"],"sourceRoot":""}